const std = @import("std");

pub const Keysym = enum(u32) {
    no_symbol = 0,
    _,

    pub fn fromName(name: []const u8) !Keysym {
        @setEvalBranchQuota(10000);
        inline for (comptime std.meta.declarations(KeysymNames)) |decl| {
            if (std.mem.eql(u8, name, decl.name))
                return @field(KeysymNames, decl.name);
        }
        return error.XcbKeysymNameNotFound;
    }

    pub fn toName(self: Keysym) ![]const u8 {
        @setEvalBranchQuota(10000);
        inline for (comptime std.meta.declarations(KeysymNames)) |decl| {
            if (@field(KeysymNames, decl.name) == self)
                return decl.name;
        }
        return error.XcbKeysymNameNotFound;
    }

    pub fn keypadKey(self: Keysym) bool {
        return if (xcb_keysym_is_keypad_key(self) == 1) true else false;
    }
    extern fn xcb_keysym_is_keypad_key(self: Keysym) c_int;

    pub fn privateKeypadKey(self: Keysym) bool {
        return if (xcb_is_private_keypad_key(self) == 1) true else false;
    }
    extern fn xcb_is_private_keypad_key(self: Keysym) c_int;

    pub fn cursorKey(self: Keysym) bool {
        return if (xcb_is_cursor_key(self) == 1) true else false;
    }
    extern fn xcb_is_cursor_key(self: Keysym) c_int;

    pub fn programFunctionKey(self: Keysym) bool {
        return if (xcb_is_pf_key(self) == 1) true else false;
    }
    extern fn xcb_is_pf_key(self: Keysym) c_int;

    pub fn functionKey(self: Keysym) bool {
        return if (xcb_is_function_key(self) == 1) true else false;
    }
    extern fn xcb_is_function_key(self: Keysym) c_int;

    pub fn miscFunctionKey(self: Keysym) bool {
        return if (xcb_is_misc_function_key(self) == 1) true else false;
    }
    extern fn xcb_is_misc_function_key(self: Keysym) c_int;

    pub fn modifierKey(self: Keysym) bool {
        return if (xcb_is_modifier_key(self) == 1) true else false;
    }
    extern fn xcb_is_modifier_key(self: Keysym) c_int;

    pub usingnamespace KeysymNames;

    pub fn checkName(self: Keysym, name: []const u8) bool {
        const declarations = comptime std.meta.declarations(KeysymNames);
        @setEvalBranchQuota(10000);
        inline for (declarations) |decl| {
            const field = @field(KeysymNames, decl.name);
            if (@TypeOf(field) != Keysym) continue;
            if (std.mem.eql(u8, name, decl.name) and field == self) {
                return true;
            }
        } else return false;
    }

    pub const max_keysym_name_len = value: {
        var longest = 0;
        for (std.meta.declarations(KeysymNames)) |decl| {
            longest = @max(longest, decl.name.len);
        }
        break :value longest;
    };
};

pub const KeysymNames = struct {
    pub const VoidSymbol: Keysym = @enumFromInt(0xffffff);

    pub const BackSpace: Keysym = @enumFromInt(0xff08);
    pub const Tab: Keysym = @enumFromInt(0xff09);
    pub const Linefeed: Keysym = @enumFromInt(0xff0a);
    pub const Clear: Keysym = @enumFromInt(0xff0b);
    pub const Return: Keysym = @enumFromInt(0xff0d);
    pub const Pause: Keysym = @enumFromInt(0xff13);
    pub const Scroll_Lock: Keysym = @enumFromInt(0xff14);
    pub const Sys_Req: Keysym = @enumFromInt(0xff15);
    pub const Escape: Keysym = @enumFromInt(0xff1b);
    pub const Delete: Keysym = @enumFromInt(0xffff);
    pub const Multi_key: Keysym = @enumFromInt(0xff20);
    pub const Codeinput: Keysym = @enumFromInt(0xff37);
    pub const SingleCandidate: Keysym = @enumFromInt(0xff3c);
    pub const MultipleCandidate: Keysym = @enumFromInt(0xff3d);
    pub const PreviousCandidate: Keysym = @enumFromInt(0xff3e);
    pub const Kanji: Keysym = @enumFromInt(0xff21);
    pub const Muhenkan: Keysym = @enumFromInt(0xff22);
    pub const Henkan_Mode: Keysym = @enumFromInt(0xff23);
    pub const Henkan: Keysym = @enumFromInt(0xff23);
    pub const Romaji: Keysym = @enumFromInt(0xff24);
    pub const Hiragana: Keysym = @enumFromInt(0xff25);
    pub const Katakana: Keysym = @enumFromInt(0xff26);
    pub const Hiragana_Katakana: Keysym = @enumFromInt(0xff27);
    pub const Zenkaku: Keysym = @enumFromInt(0xff28);
    pub const Hankaku: Keysym = @enumFromInt(0xff29);
    pub const Zenkaku_Hankaku: Keysym = @enumFromInt(0xff2a);
    pub const Touroku: Keysym = @enumFromInt(0xff2b);
    pub const Massyo: Keysym = @enumFromInt(0xff2c);
    pub const Kana_Lock: Keysym = @enumFromInt(0xff2d);
    pub const Kana_Shift: Keysym = @enumFromInt(0xff2e);
    pub const Eisu_Shift: Keysym = @enumFromInt(0xff2f);
    pub const Eisu_toggle: Keysym = @enumFromInt(0xff30);
    pub const Kanji_Bangou: Keysym = @enumFromInt(0xff37);
    pub const Zen_Koho: Keysym = @enumFromInt(0xff3d);
    pub const Mae_Koho: Keysym = @enumFromInt(0xff3e);
    pub const Home: Keysym = @enumFromInt(0xff50);
    pub const Left: Keysym = @enumFromInt(0xff51);
    pub const Up: Keysym = @enumFromInt(0xff52);
    pub const Right: Keysym = @enumFromInt(0xff53);
    pub const Down: Keysym = @enumFromInt(0xff54);
    pub const Prior: Keysym = @enumFromInt(0xff55);
    pub const Page_Up: Keysym = @enumFromInt(0xff55);
    pub const Next: Keysym = @enumFromInt(0xff56);
    pub const Page_Down: Keysym = @enumFromInt(0xff56);
    pub const End: Keysym = @enumFromInt(0xff57);
    pub const Begin: Keysym = @enumFromInt(0xff58);
    pub const Select: Keysym = @enumFromInt(0xff60);
    pub const Print: Keysym = @enumFromInt(0xff61);
    pub const Execute: Keysym = @enumFromInt(0xff62);
    pub const Insert: Keysym = @enumFromInt(0xff63);
    pub const Undo: Keysym = @enumFromInt(0xff65);
    pub const Redo: Keysym = @enumFromInt(0xff66);
    pub const Menu: Keysym = @enumFromInt(0xff67);
    pub const Find: Keysym = @enumFromInt(0xff68);
    pub const Cancel: Keysym = @enumFromInt(0xff69);
    pub const Help: Keysym = @enumFromInt(0xff6a);
    pub const Break: Keysym = @enumFromInt(0xff6b);
    pub const Mode_switch: Keysym = @enumFromInt(0xff7e);
    pub const script_switch: Keysym = @enumFromInt(0xff7e);
    pub const Num_Lock: Keysym = @enumFromInt(0xff7f);
    pub const KP_Space: Keysym = @enumFromInt(0xff80);
    pub const KP_Tab: Keysym = @enumFromInt(0xff89);
    pub const KP_Enter: Keysym = @enumFromInt(0xff8d);
    pub const KP_F1: Keysym = @enumFromInt(0xff91);
    pub const KP_F2: Keysym = @enumFromInt(0xff92);
    pub const KP_F3: Keysym = @enumFromInt(0xff93);
    pub const KP_F4: Keysym = @enumFromInt(0xff94);
    pub const KP_Home: Keysym = @enumFromInt(0xff95);
    pub const KP_Left: Keysym = @enumFromInt(0xff96);
    pub const KP_Up: Keysym = @enumFromInt(0xff97);
    pub const KP_Right: Keysym = @enumFromInt(0xff98);
    pub const KP_Down: Keysym = @enumFromInt(0xff99);
    pub const KP_Prior: Keysym = @enumFromInt(0xff9a);
    pub const KP_Page_Up: Keysym = @enumFromInt(0xff9a);
    pub const KP_Next: Keysym = @enumFromInt(0xff9b);
    pub const KP_Page_Down: Keysym = @enumFromInt(0xff9b);
    pub const KP_End: Keysym = @enumFromInt(0xff9c);
    pub const KP_Begin: Keysym = @enumFromInt(0xff9d);
    pub const KP_Insert: Keysym = @enumFromInt(0xff9e);
    pub const KP_Delete: Keysym = @enumFromInt(0xff9f);
    pub const KP_Equal: Keysym = @enumFromInt(0xffbd);
    pub const KP_Multiply: Keysym = @enumFromInt(0xffaa);
    pub const KP_Add: Keysym = @enumFromInt(0xffab);
    pub const KP_Separator: Keysym = @enumFromInt(0xffac);
    pub const KP_Subtract: Keysym = @enumFromInt(0xffad);
    pub const KP_Decimal: Keysym = @enumFromInt(0xffae);
    pub const KP_Divide: Keysym = @enumFromInt(0xffaf);
    pub const KP_0: Keysym = @enumFromInt(0xffb0);
    pub const KP_1: Keysym = @enumFromInt(0xffb1);
    pub const KP_2: Keysym = @enumFromInt(0xffb2);
    pub const KP_3: Keysym = @enumFromInt(0xffb3);
    pub const KP_4: Keysym = @enumFromInt(0xffb4);
    pub const KP_5: Keysym = @enumFromInt(0xffb5);
    pub const KP_6: Keysym = @enumFromInt(0xffb6);
    pub const KP_7: Keysym = @enumFromInt(0xffb7);
    pub const KP_8: Keysym = @enumFromInt(0xffb8);
    pub const KP_9: Keysym = @enumFromInt(0xffb9);
    pub const F1: Keysym = @enumFromInt(0xffbe);
    pub const F2: Keysym = @enumFromInt(0xffbf);
    pub const F3: Keysym = @enumFromInt(0xffc0);
    pub const F4: Keysym = @enumFromInt(0xffc1);
    pub const F5: Keysym = @enumFromInt(0xffc2);
    pub const F6: Keysym = @enumFromInt(0xffc3);
    pub const F7: Keysym = @enumFromInt(0xffc4);
    pub const F8: Keysym = @enumFromInt(0xffc5);
    pub const F9: Keysym = @enumFromInt(0xffc6);
    pub const F10: Keysym = @enumFromInt(0xffc7);
    pub const F11: Keysym = @enumFromInt(0xffc8);
    pub const L1: Keysym = @enumFromInt(0xffc8);
    pub const F12: Keysym = @enumFromInt(0xffc9);
    pub const L2: Keysym = @enumFromInt(0xffc9);
    pub const F13: Keysym = @enumFromInt(0xffca);
    pub const L3: Keysym = @enumFromInt(0xffca);
    pub const F14: Keysym = @enumFromInt(0xffcb);
    pub const L4: Keysym = @enumFromInt(0xffcb);
    pub const F15: Keysym = @enumFromInt(0xffcc);
    pub const L5: Keysym = @enumFromInt(0xffcc);
    pub const F16: Keysym = @enumFromInt(0xffcd);
    pub const L6: Keysym = @enumFromInt(0xffcd);
    pub const F17: Keysym = @enumFromInt(0xffce);
    pub const L7: Keysym = @enumFromInt(0xffce);
    pub const F18: Keysym = @enumFromInt(0xffcf);
    pub const L8: Keysym = @enumFromInt(0xffcf);
    pub const F19: Keysym = @enumFromInt(0xffd0);
    pub const L9: Keysym = @enumFromInt(0xffd0);
    pub const F20: Keysym = @enumFromInt(0xffd1);
    pub const L10: Keysym = @enumFromInt(0xffd1);
    pub const F21: Keysym = @enumFromInt(0xffd2);
    pub const R1: Keysym = @enumFromInt(0xffd2);
    pub const F22: Keysym = @enumFromInt(0xffd3);
    pub const R2: Keysym = @enumFromInt(0xffd3);
    pub const F23: Keysym = @enumFromInt(0xffd4);
    pub const R3: Keysym = @enumFromInt(0xffd4);
    pub const F24: Keysym = @enumFromInt(0xffd5);
    pub const R4: Keysym = @enumFromInt(0xffd5);
    pub const F25: Keysym = @enumFromInt(0xffd6);
    pub const R5: Keysym = @enumFromInt(0xffd6);
    pub const F26: Keysym = @enumFromInt(0xffd7);
    pub const R6: Keysym = @enumFromInt(0xffd7);
    pub const F27: Keysym = @enumFromInt(0xffd8);
    pub const R7: Keysym = @enumFromInt(0xffd8);
    pub const F28: Keysym = @enumFromInt(0xffd9);
    pub const R8: Keysym = @enumFromInt(0xffd9);
    pub const F29: Keysym = @enumFromInt(0xffda);
    pub const R9: Keysym = @enumFromInt(0xffda);
    pub const F30: Keysym = @enumFromInt(0xffdb);
    pub const R10: Keysym = @enumFromInt(0xffdb);
    pub const F31: Keysym = @enumFromInt(0xffdc);
    pub const R11: Keysym = @enumFromInt(0xffdc);
    pub const F32: Keysym = @enumFromInt(0xffdd);
    pub const R12: Keysym = @enumFromInt(0xffdd);
    pub const F33: Keysym = @enumFromInt(0xffde);
    pub const R13: Keysym = @enumFromInt(0xffde);
    pub const F34: Keysym = @enumFromInt(0xffdf);
    pub const R14: Keysym = @enumFromInt(0xffdf);
    pub const F35: Keysym = @enumFromInt(0xffe0);
    pub const R15: Keysym = @enumFromInt(0xffe0);
    pub const Shift_L: Keysym = @enumFromInt(0xffe1);
    pub const Shift_R: Keysym = @enumFromInt(0xffe2);
    pub const Control_L: Keysym = @enumFromInt(0xffe3);
    pub const Control_R: Keysym = @enumFromInt(0xffe4);
    pub const Caps_Lock: Keysym = @enumFromInt(0xffe5);
    pub const Shift_Lock: Keysym = @enumFromInt(0xffe6);
    pub const Meta_L: Keysym = @enumFromInt(0xffe7);
    pub const Meta_R: Keysym = @enumFromInt(0xffe8);
    pub const Alt_L: Keysym = @enumFromInt(0xffe9);
    pub const Alt_R: Keysym = @enumFromInt(0xffea);
    pub const Super_L: Keysym = @enumFromInt(0xffeb);
    pub const Super_R: Keysym = @enumFromInt(0xffec);
    pub const Hyper_L: Keysym = @enumFromInt(0xffed);
    pub const Hyper_R: Keysym = @enumFromInt(0xffee);

    pub const ISO_Lock: Keysym = @enumFromInt(0xfe01);
    pub const ISO_Level2_Latch: Keysym = @enumFromInt(0xfe02);
    pub const ISO_Level3_Shift: Keysym = @enumFromInt(0xfe03);
    pub const ISO_Level3_Latch: Keysym = @enumFromInt(0xfe04);
    pub const ISO_Level3_Lock: Keysym = @enumFromInt(0xfe05);
    pub const ISO_Level5_Shift: Keysym = @enumFromInt(0xfe11);
    pub const ISO_Level5_Latch: Keysym = @enumFromInt(0xfe12);
    pub const ISO_Level5_Lock: Keysym = @enumFromInt(0xfe13);
    pub const ISO_Group_Shift: Keysym = @enumFromInt(0xff7e);
    pub const ISO_Group_Latch: Keysym = @enumFromInt(0xfe06);
    pub const ISO_Group_Lock: Keysym = @enumFromInt(0xfe07);
    pub const ISO_Next_Group: Keysym = @enumFromInt(0xfe08);
    pub const ISO_Next_Group_Lock: Keysym = @enumFromInt(0xfe09);
    pub const ISO_Prev_Group: Keysym = @enumFromInt(0xfe0a);
    pub const ISO_Prev_Group_Lock: Keysym = @enumFromInt(0xfe0b);
    pub const ISO_First_Group: Keysym = @enumFromInt(0xfe0c);
    pub const ISO_First_Group_Lock: Keysym = @enumFromInt(0xfe0d);
    pub const ISO_Last_Group: Keysym = @enumFromInt(0xfe0e);
    pub const ISO_Last_Group_Lock: Keysym = @enumFromInt(0xfe0f);
    pub const ISO_Left_Tab: Keysym = @enumFromInt(0xfe20);
    pub const ISO_Move_Line_Up: Keysym = @enumFromInt(0xfe21);
    pub const ISO_Move_Line_Down: Keysym = @enumFromInt(0xfe22);
    pub const ISO_Partial_Line_Up: Keysym = @enumFromInt(0xfe23);
    pub const ISO_Partial_Line_Down: Keysym = @enumFromInt(0xfe24);
    pub const ISO_Partial_Space_Left: Keysym = @enumFromInt(0xfe25);
    pub const ISO_Partial_Space_Right: Keysym = @enumFromInt(0xfe26);
    pub const ISO_Set_Margin_Left: Keysym = @enumFromInt(0xfe27);
    pub const ISO_Set_Margin_Right: Keysym = @enumFromInt(0xfe28);
    pub const ISO_Release_Margin_Left: Keysym = @enumFromInt(0xfe29);
    pub const ISO_Release_Margin_Right: Keysym = @enumFromInt(0xfe2a);
    pub const ISO_Release_Both_Margins: Keysym = @enumFromInt(0xfe2b);
    pub const ISO_Fast_Cursor_Left: Keysym = @enumFromInt(0xfe2c);
    pub const ISO_Fast_Cursor_Right: Keysym = @enumFromInt(0xfe2d);
    pub const ISO_Fast_Cursor_Up: Keysym = @enumFromInt(0xfe2e);
    pub const ISO_Fast_Cursor_Down: Keysym = @enumFromInt(0xfe2f);
    pub const ISO_Continuous_Underline: Keysym = @enumFromInt(0xfe30);
    pub const ISO_Discontinuous_Underline: Keysym = @enumFromInt(0xfe31);
    pub const ISO_Emphasize: Keysym = @enumFromInt(0xfe32);
    pub const ISO_Center_Object: Keysym = @enumFromInt(0xfe33);
    pub const ISO_Enter: Keysym = @enumFromInt(0xfe34);
    pub const dead_grave: Keysym = @enumFromInt(0xfe50);
    pub const dead_acute: Keysym = @enumFromInt(0xfe51);
    pub const dead_circumflex: Keysym = @enumFromInt(0xfe52);
    pub const dead_tilde: Keysym = @enumFromInt(0xfe53);
    pub const dead_perispomeni: Keysym = @enumFromInt(0xfe53);
    pub const dead_macron: Keysym = @enumFromInt(0xfe54);
    pub const dead_breve: Keysym = @enumFromInt(0xfe55);
    pub const dead_abovedot: Keysym = @enumFromInt(0xfe56);
    pub const dead_diaeresis: Keysym = @enumFromInt(0xfe57);
    pub const dead_abovering: Keysym = @enumFromInt(0xfe58);
    pub const dead_doubleacute: Keysym = @enumFromInt(0xfe59);
    pub const dead_caron: Keysym = @enumFromInt(0xfe5a);
    pub const dead_cedilla: Keysym = @enumFromInt(0xfe5b);
    pub const dead_ogonek: Keysym = @enumFromInt(0xfe5c);
    pub const dead_iota: Keysym = @enumFromInt(0xfe5d);
    pub const dead_voiced_sound: Keysym = @enumFromInt(0xfe5e);
    pub const dead_semivoiced_sound: Keysym = @enumFromInt(0xfe5f);
    pub const dead_belowdot: Keysym = @enumFromInt(0xfe60);
    pub const dead_hook: Keysym = @enumFromInt(0xfe61);
    pub const dead_horn: Keysym = @enumFromInt(0xfe62);
    pub const dead_stroke: Keysym = @enumFromInt(0xfe63);
    pub const dead_abovecomma: Keysym = @enumFromInt(0xfe64);
    pub const dead_psili: Keysym = @enumFromInt(0xfe64);
    pub const dead_abovereversedcomma: Keysym = @enumFromInt(0xfe65);
    pub const dead_dasia: Keysym = @enumFromInt(0xfe65);
    pub const dead_doublegrave: Keysym = @enumFromInt(0xfe66);
    pub const dead_belowring: Keysym = @enumFromInt(0xfe67);
    pub const dead_belowmacron: Keysym = @enumFromInt(0xfe68);
    pub const dead_belowcircumflex: Keysym = @enumFromInt(0xfe69);
    pub const dead_belowtilde: Keysym = @enumFromInt(0xfe6a);
    pub const dead_belowbreve: Keysym = @enumFromInt(0xfe6b);
    pub const dead_belowdiaeresis: Keysym = @enumFromInt(0xfe6c);
    pub const dead_invertedbreve: Keysym = @enumFromInt(0xfe6d);
    pub const dead_belowcomma: Keysym = @enumFromInt(0xfe6e);
    pub const dead_currency: Keysym = @enumFromInt(0xfe6f);
    pub const dead_a: Keysym = @enumFromInt(0xfe80);
    pub const dead_A: Keysym = @enumFromInt(0xfe81);
    pub const dead_e: Keysym = @enumFromInt(0xfe82);
    pub const dead_E: Keysym = @enumFromInt(0xfe83);
    pub const dead_i: Keysym = @enumFromInt(0xfe84);
    pub const dead_I: Keysym = @enumFromInt(0xfe85);
    pub const dead_o: Keysym = @enumFromInt(0xfe86);
    pub const dead_O: Keysym = @enumFromInt(0xfe87);
    pub const dead_u: Keysym = @enumFromInt(0xfe88);
    pub const dead_U: Keysym = @enumFromInt(0xfe89);
    pub const dead_small_schwa: Keysym = @enumFromInt(0xfe8a);
    pub const dead_capital_schwa: Keysym = @enumFromInt(0xfe8b);
    pub const dead_greek: Keysym = @enumFromInt(0xfe8c);
    pub const First_Virtual_Screen: Keysym = @enumFromInt(0xfed0);
    pub const Prev_Virtual_Screen: Keysym = @enumFromInt(0xfed1);
    pub const Next_Virtual_Screen: Keysym = @enumFromInt(0xfed2);
    pub const Last_Virtual_Screen: Keysym = @enumFromInt(0xfed4);
    pub const Terminate_Server: Keysym = @enumFromInt(0xfed5);
    pub const AccessX_Enable: Keysym = @enumFromInt(0xfe70);
    pub const AccessX_Feedback_Enable: Keysym = @enumFromInt(0xfe71);
    pub const RepeatKeys_Enable: Keysym = @enumFromInt(0xfe72);
    pub const SlowKeys_Enable: Keysym = @enumFromInt(0xfe73);
    pub const BounceKeys_Enable: Keysym = @enumFromInt(0xfe74);
    pub const StickyKeys_Enable: Keysym = @enumFromInt(0xfe75);
    pub const MouseKeys_Enable: Keysym = @enumFromInt(0xfe76);
    pub const MouseKeys_Accel_Enable: Keysym = @enumFromInt(0xfe77);
    pub const Overlay1_Enable: Keysym = @enumFromInt(0xfe78);
    pub const Overlay2_Enable: Keysym = @enumFromInt(0xfe79);
    pub const AudibleBell_Enable: Keysym = @enumFromInt(0xfe7a);
    pub const Pointer_Left: Keysym = @enumFromInt(0xfee0);
    pub const Pointer_Right: Keysym = @enumFromInt(0xfee1);
    pub const Pointer_Up: Keysym = @enumFromInt(0xfee2);
    pub const Pointer_Down: Keysym = @enumFromInt(0xfee3);
    pub const Pointer_UpLeft: Keysym = @enumFromInt(0xfee4);
    pub const Pointer_UpRight: Keysym = @enumFromInt(0xfee5);
    pub const Pointer_DownLeft: Keysym = @enumFromInt(0xfee6);
    pub const Pointer_DownRight: Keysym = @enumFromInt(0xfee7);
    pub const Pointer_Button_Dflt: Keysym = @enumFromInt(0xfee8);
    pub const Pointer_Button1: Keysym = @enumFromInt(0xfee9);
    pub const Pointer_Button2: Keysym = @enumFromInt(0xfeea);
    pub const Pointer_Button3: Keysym = @enumFromInt(0xfeeb);
    pub const Pointer_Button4: Keysym = @enumFromInt(0xfeec);
    pub const Pointer_Button5: Keysym = @enumFromInt(0xfeed);
    pub const Pointer_DblClick_Dflt: Keysym = @enumFromInt(0xfeee);
    pub const Pointer_DblClick1: Keysym = @enumFromInt(0xfeef);
    pub const Pointer_DblClick2: Keysym = @enumFromInt(0xfef0);
    pub const Pointer_DblClick3: Keysym = @enumFromInt(0xfef1);
    pub const Pointer_DblClick4: Keysym = @enumFromInt(0xfef2);
    pub const Pointer_DblClick5: Keysym = @enumFromInt(0xfef3);
    pub const Pointer_Drag_Dflt: Keysym = @enumFromInt(0xfef4);
    pub const Pointer_Drag1: Keysym = @enumFromInt(0xfef5);
    pub const Pointer_Drag2: Keysym = @enumFromInt(0xfef6);
    pub const Pointer_Drag3: Keysym = @enumFromInt(0xfef7);
    pub const Pointer_Drag4: Keysym = @enumFromInt(0xfef8);
    pub const Pointer_Drag5: Keysym = @enumFromInt(0xfefd);
    pub const Pointer_EnableKeys: Keysym = @enumFromInt(0xfef9);
    pub const Pointer_Accelerate: Keysym = @enumFromInt(0xfefa);
    pub const Pointer_DfltBtnNext: Keysym = @enumFromInt(0xfefb);
    pub const Pointer_DfltBtnPrev: Keysym = @enumFromInt(0xfefc);
    pub const ch: Keysym = @enumFromInt(0xfea0);
    pub const Ch: Keysym = @enumFromInt(0xfea1);
    pub const CH: Keysym = @enumFromInt(0xfea2);
    pub const c_h: Keysym = @enumFromInt(0xfea3);
    pub const C_h: Keysym = @enumFromInt(0xfea4);
    pub const C_H: Keysym = @enumFromInt(0xfea5);

    pub const @"3270_Duplicate": Keysym = @enumFromInt(0xfd01);
    pub const @"3270_FieldMark": Keysym = @enumFromInt(0xfd02);
    pub const @"3270_Right2": Keysym = @enumFromInt(0xfd03);
    pub const @"3270_Left2": Keysym = @enumFromInt(0xfd04);
    pub const @"3270_BackTab": Keysym = @enumFromInt(0xfd05);
    pub const @"3270_EraseEOF": Keysym = @enumFromInt(0xfd06);
    pub const @"3270_EraseInput": Keysym = @enumFromInt(0xfd07);
    pub const @"3270_Reset": Keysym = @enumFromInt(0xfd08);
    pub const @"3270_Quit": Keysym = @enumFromInt(0xfd09);
    pub const @"3270_PA1": Keysym = @enumFromInt(0xfd0a);
    pub const @"3270_PA2": Keysym = @enumFromInt(0xfd0b);
    pub const @"3270_PA3": Keysym = @enumFromInt(0xfd0c);
    pub const @"3270_Test": Keysym = @enumFromInt(0xfd0d);
    pub const @"3270_Attn": Keysym = @enumFromInt(0xfd0e);
    pub const @"3270_CursorBlink": Keysym = @enumFromInt(0xfd0f);
    pub const @"3270_AltCursor": Keysym = @enumFromInt(0xfd10);
    pub const @"3270_KeyClick": Keysym = @enumFromInt(0xfd11);
    pub const @"3270_Jump": Keysym = @enumFromInt(0xfd12);
    pub const @"3270_Ident": Keysym = @enumFromInt(0xfd13);
    pub const @"3270_Rule": Keysym = @enumFromInt(0xfd14);
    pub const @"3270_Copy": Keysym = @enumFromInt(0xfd15);
    pub const @"3270_Play": Keysym = @enumFromInt(0xfd16);
    pub const @"3270_Setup": Keysym = @enumFromInt(0xfd17);
    pub const @"3270_Record": Keysym = @enumFromInt(0xfd18);
    pub const @"3270_ChangeScreen": Keysym = @enumFromInt(0xfd19);
    pub const @"3270_DeleteWord": Keysym = @enumFromInt(0xfd1a);
    pub const @"3270_ExSelect": Keysym = @enumFromInt(0xfd1b);
    pub const @"3270_CursorSelect": Keysym = @enumFromInt(0xfd1c);
    pub const @"3270_PrintScreen": Keysym = @enumFromInt(0xfd1d);
    pub const @"3270_Enter": Keysym = @enumFromInt(0xfd1e);

    pub const space: Keysym = @enumFromInt(0x0020);
    pub const exclam: Keysym = @enumFromInt(0x0021);
    pub const quotedbl: Keysym = @enumFromInt(0x0022);
    pub const numbersign: Keysym = @enumFromInt(0x0023);
    pub const dollar: Keysym = @enumFromInt(0x0024);
    pub const percent: Keysym = @enumFromInt(0x0025);
    pub const ampersand: Keysym = @enumFromInt(0x0026);
    pub const apostrophe: Keysym = @enumFromInt(0x0027);
    pub const quoteright: Keysym = @enumFromInt(0x0027);
    pub const parenleft: Keysym = @enumFromInt(0x0028);
    pub const parenright: Keysym = @enumFromInt(0x0029);
    pub const asterisk: Keysym = @enumFromInt(0x002a);
    pub const plus: Keysym = @enumFromInt(0x002b);
    pub const comma: Keysym = @enumFromInt(0x002c);
    pub const minus: Keysym = @enumFromInt(0x002d);
    pub const period: Keysym = @enumFromInt(0x002e);
    pub const slash: Keysym = @enumFromInt(0x002f);
    pub const @"0": Keysym = @enumFromInt(0x0030);
    pub const @"1": Keysym = @enumFromInt(0x0031);
    pub const @"2": Keysym = @enumFromInt(0x0032);
    pub const @"3": Keysym = @enumFromInt(0x0033);
    pub const @"4": Keysym = @enumFromInt(0x0034);
    pub const @"5": Keysym = @enumFromInt(0x0035);
    pub const @"6": Keysym = @enumFromInt(0x0036);
    pub const @"7": Keysym = @enumFromInt(0x0037);
    pub const @"8": Keysym = @enumFromInt(0x0038);
    pub const @"9": Keysym = @enumFromInt(0x0039);
    pub const colon: Keysym = @enumFromInt(0x003a);
    pub const semicolon: Keysym = @enumFromInt(0x003b);
    pub const less: Keysym = @enumFromInt(0x003c);
    pub const equal: Keysym = @enumFromInt(0x003d);
    pub const greater: Keysym = @enumFromInt(0x003e);
    pub const question: Keysym = @enumFromInt(0x003f);
    pub const at: Keysym = @enumFromInt(0x0040);
    pub const A: Keysym = @enumFromInt(0x0041);
    pub const B: Keysym = @enumFromInt(0x0042);
    pub const C: Keysym = @enumFromInt(0x0043);
    pub const D: Keysym = @enumFromInt(0x0044);
    pub const E: Keysym = @enumFromInt(0x0045);
    pub const F: Keysym = @enumFromInt(0x0046);
    pub const G: Keysym = @enumFromInt(0x0047);
    pub const H: Keysym = @enumFromInt(0x0048);
    pub const I: Keysym = @enumFromInt(0x0049);
    pub const J: Keysym = @enumFromInt(0x004a);
    pub const K: Keysym = @enumFromInt(0x004b);
    pub const L: Keysym = @enumFromInt(0x004c);
    pub const M: Keysym = @enumFromInt(0x004d);
    pub const N: Keysym = @enumFromInt(0x004e);
    pub const O: Keysym = @enumFromInt(0x004f);
    pub const P: Keysym = @enumFromInt(0x0050);
    pub const Q: Keysym = @enumFromInt(0x0051);
    pub const R: Keysym = @enumFromInt(0x0052);
    pub const S: Keysym = @enumFromInt(0x0053);
    pub const T: Keysym = @enumFromInt(0x0054);
    pub const U: Keysym = @enumFromInt(0x0055);
    pub const V: Keysym = @enumFromInt(0x0056);
    pub const W: Keysym = @enumFromInt(0x0057);
    pub const X: Keysym = @enumFromInt(0x0058);
    pub const Y: Keysym = @enumFromInt(0x0059);
    pub const Z: Keysym = @enumFromInt(0x005a);
    pub const bracketleft: Keysym = @enumFromInt(0x005b);
    pub const backslash: Keysym = @enumFromInt(0x005c);
    pub const bracketright: Keysym = @enumFromInt(0x005d);
    pub const asciicircum: Keysym = @enumFromInt(0x005e);
    pub const underscore: Keysym = @enumFromInt(0x005f);
    pub const grave: Keysym = @enumFromInt(0x0060);
    pub const quoteleft: Keysym = @enumFromInt(0x0060);
    pub const a: Keysym = @enumFromInt(0x0061);
    pub const b: Keysym = @enumFromInt(0x0062);
    pub const c: Keysym = @enumFromInt(0x0063);
    pub const d: Keysym = @enumFromInt(0x0064);
    pub const e: Keysym = @enumFromInt(0x0065);
    pub const f: Keysym = @enumFromInt(0x0066);
    pub const g: Keysym = @enumFromInt(0x0067);
    pub const h: Keysym = @enumFromInt(0x0068);
    pub const i: Keysym = @enumFromInt(0x0069);
    pub const j: Keysym = @enumFromInt(0x006a);
    pub const k: Keysym = @enumFromInt(0x006b);
    pub const l: Keysym = @enumFromInt(0x006c);
    pub const m: Keysym = @enumFromInt(0x006d);
    pub const n: Keysym = @enumFromInt(0x006e);
    pub const o: Keysym = @enumFromInt(0x006f);
    pub const p: Keysym = @enumFromInt(0x0070);
    pub const q: Keysym = @enumFromInt(0x0071);
    pub const r: Keysym = @enumFromInt(0x0072);
    pub const s: Keysym = @enumFromInt(0x0073);
    pub const t: Keysym = @enumFromInt(0x0074);
    pub const u: Keysym = @enumFromInt(0x0075);
    pub const v: Keysym = @enumFromInt(0x0076);
    pub const w: Keysym = @enumFromInt(0x0077);
    pub const x: Keysym = @enumFromInt(0x0078);
    pub const y: Keysym = @enumFromInt(0x0079);
    pub const z: Keysym = @enumFromInt(0x007a);
    pub const braceleft: Keysym = @enumFromInt(0x007b);
    pub const bar: Keysym = @enumFromInt(0x007c);
    pub const braceright: Keysym = @enumFromInt(0x007d);
    pub const asciitilde: Keysym = @enumFromInt(0x007e);
    pub const nobreakspace: Keysym = @enumFromInt(0x00a0);
    pub const exclamdown: Keysym = @enumFromInt(0x00a1);
    pub const cent: Keysym = @enumFromInt(0x00a2);
    pub const sterling: Keysym = @enumFromInt(0x00a3);
    pub const currency: Keysym = @enumFromInt(0x00a4);
    pub const yen: Keysym = @enumFromInt(0x00a5);
    pub const brokenbar: Keysym = @enumFromInt(0x00a6);
    pub const section: Keysym = @enumFromInt(0x00a7);
    pub const diaeresis: Keysym = @enumFromInt(0x00a8);
    pub const copyright: Keysym = @enumFromInt(0x00a9);
    pub const ordfeminine: Keysym = @enumFromInt(0x00aa);
    pub const guillemotleft: Keysym = @enumFromInt(0x00ab);
    pub const notsign: Keysym = @enumFromInt(0x00ac);
    pub const hyphen: Keysym = @enumFromInt(0x00ad);
    pub const registered: Keysym = @enumFromInt(0x00ae);
    pub const macron: Keysym = @enumFromInt(0x00af);
    pub const degree: Keysym = @enumFromInt(0x00b0);
    pub const plusminus: Keysym = @enumFromInt(0x00b1);
    pub const twosuperior: Keysym = @enumFromInt(0x00b2);
    pub const threesuperior: Keysym = @enumFromInt(0x00b3);
    pub const acute: Keysym = @enumFromInt(0x00b4);
    pub const mu: Keysym = @enumFromInt(0x00b5);
    pub const paragraph: Keysym = @enumFromInt(0x00b6);
    pub const periodcentered: Keysym = @enumFromInt(0x00b7);
    pub const cedilla: Keysym = @enumFromInt(0x00b8);
    pub const onesuperior: Keysym = @enumFromInt(0x00b9);
    pub const masculine: Keysym = @enumFromInt(0x00ba);
    pub const guillemotright: Keysym = @enumFromInt(0x00bb);
    pub const onequarter: Keysym = @enumFromInt(0x00bc);
    pub const onehalf: Keysym = @enumFromInt(0x00bd);
    pub const threequarters: Keysym = @enumFromInt(0x00be);
    pub const questiondown: Keysym = @enumFromInt(0x00bf);
    pub const Agrave: Keysym = @enumFromInt(0x00c0);
    pub const Aacute: Keysym = @enumFromInt(0x00c1);
    pub const Acircumflex: Keysym = @enumFromInt(0x00c2);
    pub const Atilde: Keysym = @enumFromInt(0x00c3);
    pub const Adiaeresis: Keysym = @enumFromInt(0x00c4);
    pub const Aring: Keysym = @enumFromInt(0x00c5);
    pub const AE: Keysym = @enumFromInt(0x00c6);
    pub const Ccedilla: Keysym = @enumFromInt(0x00c7);
    pub const Egrave: Keysym = @enumFromInt(0x00c8);
    pub const Eacute: Keysym = @enumFromInt(0x00c9);
    pub const Ecircumflex: Keysym = @enumFromInt(0x00ca);
    pub const Ediaeresis: Keysym = @enumFromInt(0x00cb);
    pub const Igrave: Keysym = @enumFromInt(0x00cc);
    pub const Iacute: Keysym = @enumFromInt(0x00cd);
    pub const Icircumflex: Keysym = @enumFromInt(0x00ce);
    pub const Idiaeresis: Keysym = @enumFromInt(0x00cf);
    pub const ETH: Keysym = @enumFromInt(0x00d0);
    pub const Eth: Keysym = @enumFromInt(0x00d0);
    pub const Ntilde: Keysym = @enumFromInt(0x00d1);
    pub const Ograve: Keysym = @enumFromInt(0x00d2);
    pub const Oacute: Keysym = @enumFromInt(0x00d3);
    pub const Ocircumflex: Keysym = @enumFromInt(0x00d4);
    pub const Otilde: Keysym = @enumFromInt(0x00d5);
    pub const Odiaeresis: Keysym = @enumFromInt(0x00d6);
    pub const multiply: Keysym = @enumFromInt(0x00d7);
    pub const Oslash: Keysym = @enumFromInt(0x00d8);
    pub const Ooblique: Keysym = @enumFromInt(0x00d8);
    pub const Ugrave: Keysym = @enumFromInt(0x00d9);
    pub const Uacute: Keysym = @enumFromInt(0x00da);
    pub const Ucircumflex: Keysym = @enumFromInt(0x00db);
    pub const Udiaeresis: Keysym = @enumFromInt(0x00dc);
    pub const Yacute: Keysym = @enumFromInt(0x00dd);
    pub const THORN: Keysym = @enumFromInt(0x00de);
    pub const Thorn: Keysym = @enumFromInt(0x00de);
    pub const ssharp: Keysym = @enumFromInt(0x00df);
    pub const agrave: Keysym = @enumFromInt(0x00e0);
    pub const aacute: Keysym = @enumFromInt(0x00e1);
    pub const acircumflex: Keysym = @enumFromInt(0x00e2);
    pub const atilde: Keysym = @enumFromInt(0x00e3);
    pub const adiaeresis: Keysym = @enumFromInt(0x00e4);
    pub const aring: Keysym = @enumFromInt(0x00e5);
    pub const ae: Keysym = @enumFromInt(0x00e6);
    pub const ccedilla: Keysym = @enumFromInt(0x00e7);
    pub const egrave: Keysym = @enumFromInt(0x00e8);
    pub const eacute: Keysym = @enumFromInt(0x00e9);
    pub const ecircumflex: Keysym = @enumFromInt(0x00ea);
    pub const ediaeresis: Keysym = @enumFromInt(0x00eb);
    pub const igrave: Keysym = @enumFromInt(0x00ec);
    pub const iacute: Keysym = @enumFromInt(0x00ed);
    pub const icircumflex: Keysym = @enumFromInt(0x00ee);
    pub const idiaeresis: Keysym = @enumFromInt(0x00ef);
    pub const eth: Keysym = @enumFromInt(0x00f0);
    pub const ntilde: Keysym = @enumFromInt(0x00f1);
    pub const ograve: Keysym = @enumFromInt(0x00f2);
    pub const oacute: Keysym = @enumFromInt(0x00f3);
    pub const ocircumflex: Keysym = @enumFromInt(0x00f4);
    pub const otilde: Keysym = @enumFromInt(0x00f5);
    pub const odiaeresis: Keysym = @enumFromInt(0x00f6);
    pub const division: Keysym = @enumFromInt(0x00f7);
    pub const oslash: Keysym = @enumFromInt(0x00f8);
    pub const ooblique: Keysym = @enumFromInt(0x00f8);
    pub const ugrave: Keysym = @enumFromInt(0x00f9);
    pub const uacute: Keysym = @enumFromInt(0x00fa);
    pub const ucircumflex: Keysym = @enumFromInt(0x00fb);
    pub const udiaeresis: Keysym = @enumFromInt(0x00fc);
    pub const yacute: Keysym = @enumFromInt(0x00fd);
    pub const thorn: Keysym = @enumFromInt(0x00fe);
    pub const ydiaeresis: Keysym = @enumFromInt(0x00ff);

    pub const Aogonek: Keysym = @enumFromInt(0x01a1);
    pub const breve: Keysym = @enumFromInt(0x01a2);
    pub const Lstroke: Keysym = @enumFromInt(0x01a3);
    pub const Lcaron: Keysym = @enumFromInt(0x01a5);
    pub const Sacute: Keysym = @enumFromInt(0x01a6);
    pub const Scaron: Keysym = @enumFromInt(0x01a9);
    pub const Scedilla: Keysym = @enumFromInt(0x01aa);
    pub const Tcaron: Keysym = @enumFromInt(0x01ab);
    pub const Zacute: Keysym = @enumFromInt(0x01ac);
    pub const Zcaron: Keysym = @enumFromInt(0x01ae);
    pub const Zabovedot: Keysym = @enumFromInt(0x01af);
    pub const aogonek: Keysym = @enumFromInt(0x01b1);
    pub const ogonek: Keysym = @enumFromInt(0x01b2);
    pub const lstroke: Keysym = @enumFromInt(0x01b3);
    pub const lcaron: Keysym = @enumFromInt(0x01b5);
    pub const sacute: Keysym = @enumFromInt(0x01b6);
    pub const caron: Keysym = @enumFromInt(0x01b7);
    pub const scaron: Keysym = @enumFromInt(0x01b9);
    pub const scedilla: Keysym = @enumFromInt(0x01ba);
    pub const tcaron: Keysym = @enumFromInt(0x01bb);
    pub const zacute: Keysym = @enumFromInt(0x01bc);
    pub const doubleacute: Keysym = @enumFromInt(0x01bd);
    pub const zcaron: Keysym = @enumFromInt(0x01be);
    pub const zabovedot: Keysym = @enumFromInt(0x01bf);
    pub const Racute: Keysym = @enumFromInt(0x01c0);
    pub const Abreve: Keysym = @enumFromInt(0x01c3);
    pub const Lacute: Keysym = @enumFromInt(0x01c5);
    pub const Cacute: Keysym = @enumFromInt(0x01c6);
    pub const Ccaron: Keysym = @enumFromInt(0x01c8);
    pub const Eogonek: Keysym = @enumFromInt(0x01ca);
    pub const Ecaron: Keysym = @enumFromInt(0x01cc);
    pub const Dcaron: Keysym = @enumFromInt(0x01cf);
    pub const Dstroke: Keysym = @enumFromInt(0x01d0);
    pub const Nacute: Keysym = @enumFromInt(0x01d1);
    pub const Ncaron: Keysym = @enumFromInt(0x01d2);
    pub const Odoubleacute: Keysym = @enumFromInt(0x01d5);
    pub const Rcaron: Keysym = @enumFromInt(0x01d8);
    pub const Uring: Keysym = @enumFromInt(0x01d9);
    pub const Udoubleacute: Keysym = @enumFromInt(0x01db);
    pub const Tcedilla: Keysym = @enumFromInt(0x01de);
    pub const racute: Keysym = @enumFromInt(0x01e0);
    pub const abreve: Keysym = @enumFromInt(0x01e3);
    pub const lacute: Keysym = @enumFromInt(0x01e5);
    pub const cacute: Keysym = @enumFromInt(0x01e6);
    pub const ccaron: Keysym = @enumFromInt(0x01e8);
    pub const eogonek: Keysym = @enumFromInt(0x01ea);
    pub const ecaron: Keysym = @enumFromInt(0x01ec);
    pub const dcaron: Keysym = @enumFromInt(0x01ef);
    pub const dstroke: Keysym = @enumFromInt(0x01f0);
    pub const nacute: Keysym = @enumFromInt(0x01f1);
    pub const ncaron: Keysym = @enumFromInt(0x01f2);
    pub const odoubleacute: Keysym = @enumFromInt(0x01f5);
    pub const rcaron: Keysym = @enumFromInt(0x01f8);
    pub const uring: Keysym = @enumFromInt(0x01f9);
    pub const udoubleacute: Keysym = @enumFromInt(0x01fb);
    pub const tcedilla: Keysym = @enumFromInt(0x01fe);
    pub const abovedot: Keysym = @enumFromInt(0x01ff);

    pub const Hstroke: Keysym = @enumFromInt(0x02a1);
    pub const Hcircumflex: Keysym = @enumFromInt(0x02a6);
    pub const Iabovedot: Keysym = @enumFromInt(0x02a9);
    pub const Gbreve: Keysym = @enumFromInt(0x02ab);
    pub const Jcircumflex: Keysym = @enumFromInt(0x02ac);
    pub const hstroke: Keysym = @enumFromInt(0x02b1);
    pub const hcircumflex: Keysym = @enumFromInt(0x02b6);
    pub const idotless: Keysym = @enumFromInt(0x02b9);
    pub const gbreve: Keysym = @enumFromInt(0x02bb);
    pub const jcircumflex: Keysym = @enumFromInt(0x02bc);
    pub const Cabovedot: Keysym = @enumFromInt(0x02c5);
    pub const Ccircumflex: Keysym = @enumFromInt(0x02c6);
    pub const Gabovedot: Keysym = @enumFromInt(0x02d5);
    pub const Gcircumflex: Keysym = @enumFromInt(0x02d8);
    pub const Ubreve: Keysym = @enumFromInt(0x02dd);
    pub const Scircumflex: Keysym = @enumFromInt(0x02de);
    pub const cabovedot: Keysym = @enumFromInt(0x02e5);
    pub const ccircumflex: Keysym = @enumFromInt(0x02e6);
    pub const gabovedot: Keysym = @enumFromInt(0x02f5);
    pub const gcircumflex: Keysym = @enumFromInt(0x02f8);
    pub const ubreve: Keysym = @enumFromInt(0x02fd);
    pub const scircumflex: Keysym = @enumFromInt(0x02fe);

    pub const kra: Keysym = @enumFromInt(0x03a2);
    pub const kappa: Keysym = @enumFromInt(0x03a2);
    pub const Rcedilla: Keysym = @enumFromInt(0x03a3);
    pub const Itilde: Keysym = @enumFromInt(0x03a5);
    pub const Lcedilla: Keysym = @enumFromInt(0x03a6);
    pub const Emacron: Keysym = @enumFromInt(0x03aa);
    pub const Gcedilla: Keysym = @enumFromInt(0x03ab);
    pub const Tslash: Keysym = @enumFromInt(0x03ac);
    pub const rcedilla: Keysym = @enumFromInt(0x03b3);
    pub const itilde: Keysym = @enumFromInt(0x03b5);
    pub const lcedilla: Keysym = @enumFromInt(0x03b6);
    pub const emacron: Keysym = @enumFromInt(0x03ba);
    pub const gcedilla: Keysym = @enumFromInt(0x03bb);
    pub const tslash: Keysym = @enumFromInt(0x03bc);
    pub const ENG: Keysym = @enumFromInt(0x03bd);
    pub const eng: Keysym = @enumFromInt(0x03bf);
    pub const Amacron: Keysym = @enumFromInt(0x03c0);
    pub const Iogonek: Keysym = @enumFromInt(0x03c7);
    pub const Eabovedot: Keysym = @enumFromInt(0x03cc);
    pub const Imacron: Keysym = @enumFromInt(0x03cf);
    pub const Ncedilla: Keysym = @enumFromInt(0x03d1);
    pub const Omacron: Keysym = @enumFromInt(0x03d2);
    pub const Kcedilla: Keysym = @enumFromInt(0x03d3);
    pub const Uogonek: Keysym = @enumFromInt(0x03d9);
    pub const Utilde: Keysym = @enumFromInt(0x03dd);
    pub const Umacron: Keysym = @enumFromInt(0x03de);
    pub const amacron: Keysym = @enumFromInt(0x03e0);
    pub const iogonek: Keysym = @enumFromInt(0x03e7);
    pub const eabovedot: Keysym = @enumFromInt(0x03ec);
    pub const imacron: Keysym = @enumFromInt(0x03ef);
    pub const ncedilla: Keysym = @enumFromInt(0x03f1);
    pub const omacron: Keysym = @enumFromInt(0x03f2);
    pub const kcedilla: Keysym = @enumFromInt(0x03f3);
    pub const uogonek: Keysym = @enumFromInt(0x03f9);
    pub const utilde: Keysym = @enumFromInt(0x03fd);
    pub const umacron: Keysym = @enumFromInt(0x03fe);

    pub const Wcircumflex: Keysym = @enumFromInt(0x1000174);
    pub const wcircumflex: Keysym = @enumFromInt(0x1000175);
    pub const Ycircumflex: Keysym = @enumFromInt(0x1000176);
    pub const ycircumflex: Keysym = @enumFromInt(0x1000177);
    pub const Babovedot: Keysym = @enumFromInt(0x1001e02);
    pub const babovedot: Keysym = @enumFromInt(0x1001e03);
    pub const Dabovedot: Keysym = @enumFromInt(0x1001e0a);
    pub const dabovedot: Keysym = @enumFromInt(0x1001e0b);
    pub const Fabovedot: Keysym = @enumFromInt(0x1001e1e);
    pub const fabovedot: Keysym = @enumFromInt(0x1001e1f);
    pub const Mabovedot: Keysym = @enumFromInt(0x1001e40);
    pub const mabovedot: Keysym = @enumFromInt(0x1001e41);
    pub const Pabovedot: Keysym = @enumFromInt(0x1001e56);
    pub const pabovedot: Keysym = @enumFromInt(0x1001e57);
    pub const Sabovedot: Keysym = @enumFromInt(0x1001e60);
    pub const sabovedot: Keysym = @enumFromInt(0x1001e61);
    pub const Tabovedot: Keysym = @enumFromInt(0x1001e6a);
    pub const tabovedot: Keysym = @enumFromInt(0x1001e6b);
    pub const Wgrave: Keysym = @enumFromInt(0x1001e80);
    pub const wgrave: Keysym = @enumFromInt(0x1001e81);
    pub const Wacute: Keysym = @enumFromInt(0x1001e82);
    pub const wacute: Keysym = @enumFromInt(0x1001e83);
    pub const Wdiaeresis: Keysym = @enumFromInt(0x1001e84);
    pub const wdiaeresis: Keysym = @enumFromInt(0x1001e85);
    pub const Ygrave: Keysym = @enumFromInt(0x1001ef2);
    pub const ygrave: Keysym = @enumFromInt(0x1001ef3);

    pub const OE: Keysym = @enumFromInt(0x13bc);
    pub const oe: Keysym = @enumFromInt(0x13bd);
    pub const Ydiaeresis: Keysym = @enumFromInt(0x13be);

    pub const overline: Keysym = @enumFromInt(0x047e);
    pub const kana_fullstop: Keysym = @enumFromInt(0x04a1);
    pub const kana_openingbracket: Keysym = @enumFromInt(0x04a2);
    pub const kana_closingbracket: Keysym = @enumFromInt(0x04a3);
    pub const kana_comma: Keysym = @enumFromInt(0x04a4);
    pub const kana_conjunctive: Keysym = @enumFromInt(0x04a5);
    pub const kana_middledot: Keysym = @enumFromInt(0x04a5);
    pub const kana_WO: Keysym = @enumFromInt(0x04a6);
    pub const kana_a: Keysym = @enumFromInt(0x04a7);
    pub const kana_i: Keysym = @enumFromInt(0x04a8);
    pub const kana_u: Keysym = @enumFromInt(0x04a9);
    pub const kana_e: Keysym = @enumFromInt(0x04aa);
    pub const kana_o: Keysym = @enumFromInt(0x04ab);
    pub const kana_ya: Keysym = @enumFromInt(0x04ac);
    pub const kana_yu: Keysym = @enumFromInt(0x04ad);
    pub const kana_yo: Keysym = @enumFromInt(0x04ae);
    pub const kana_tsu: Keysym = @enumFromInt(0x04af);
    pub const kana_tu: Keysym = @enumFromInt(0x04af);
    pub const prolongedsound: Keysym = @enumFromInt(0x04b0);
    pub const kana_A: Keysym = @enumFromInt(0x04b1);
    pub const kana_I: Keysym = @enumFromInt(0x04b2);
    pub const kana_U: Keysym = @enumFromInt(0x04b3);
    pub const kana_E: Keysym = @enumFromInt(0x04b4);
    pub const kana_O: Keysym = @enumFromInt(0x04b5);
    pub const kana_KA: Keysym = @enumFromInt(0x04b6);
    pub const kana_KI: Keysym = @enumFromInt(0x04b7);
    pub const kana_KU: Keysym = @enumFromInt(0x04b8);
    pub const kana_KE: Keysym = @enumFromInt(0x04b9);
    pub const kana_KO: Keysym = @enumFromInt(0x04ba);
    pub const kana_SA: Keysym = @enumFromInt(0x04bb);
    pub const kana_SHI: Keysym = @enumFromInt(0x04bc);
    pub const kana_SU: Keysym = @enumFromInt(0x04bd);
    pub const kana_SE: Keysym = @enumFromInt(0x04be);
    pub const kana_SO: Keysym = @enumFromInt(0x04bf);
    pub const kana_TA: Keysym = @enumFromInt(0x04c0);
    pub const kana_CHI: Keysym = @enumFromInt(0x04c1);
    pub const kana_TI: Keysym = @enumFromInt(0x04c1);
    pub const kana_TSU: Keysym = @enumFromInt(0x04c2);
    pub const kana_TU: Keysym = @enumFromInt(0x04c2);
    pub const kana_TE: Keysym = @enumFromInt(0x04c3);
    pub const kana_TO: Keysym = @enumFromInt(0x04c4);
    pub const kana_NA: Keysym = @enumFromInt(0x04c5);
    pub const kana_NI: Keysym = @enumFromInt(0x04c6);
    pub const kana_NU: Keysym = @enumFromInt(0x04c7);
    pub const kana_NE: Keysym = @enumFromInt(0x04c8);
    pub const kana_NO: Keysym = @enumFromInt(0x04c9);
    pub const kana_HA: Keysym = @enumFromInt(0x04ca);
    pub const kana_HI: Keysym = @enumFromInt(0x04cb);
    pub const kana_FU: Keysym = @enumFromInt(0x04cc);
    pub const kana_HU: Keysym = @enumFromInt(0x04cc);
    pub const kana_HE: Keysym = @enumFromInt(0x04cd);
    pub const kana_HO: Keysym = @enumFromInt(0x04ce);
    pub const kana_MA: Keysym = @enumFromInt(0x04cf);
    pub const kana_MI: Keysym = @enumFromInt(0x04d0);
    pub const kana_MU: Keysym = @enumFromInt(0x04d1);
    pub const kana_ME: Keysym = @enumFromInt(0x04d2);
    pub const kana_MO: Keysym = @enumFromInt(0x04d3);
    pub const kana_YA: Keysym = @enumFromInt(0x04d4);
    pub const kana_YU: Keysym = @enumFromInt(0x04d5);
    pub const kana_YO: Keysym = @enumFromInt(0x04d6);
    pub const kana_RA: Keysym = @enumFromInt(0x04d7);
    pub const kana_RI: Keysym = @enumFromInt(0x04d8);
    pub const kana_RU: Keysym = @enumFromInt(0x04d9);
    pub const kana_RE: Keysym = @enumFromInt(0x04da);
    pub const kana_RO: Keysym = @enumFromInt(0x04db);
    pub const kana_WA: Keysym = @enumFromInt(0x04dc);
    pub const kana_N: Keysym = @enumFromInt(0x04dd);
    pub const voicedsound: Keysym = @enumFromInt(0x04de);
    pub const semivoicedsound: Keysym = @enumFromInt(0x04df);
    pub const kana_switch: Keysym = @enumFromInt(0xff7e);

    pub const Farsi_0: Keysym = @enumFromInt(0x10006f0);
    pub const Farsi_1: Keysym = @enumFromInt(0x10006f1);
    pub const Farsi_2: Keysym = @enumFromInt(0x10006f2);
    pub const Farsi_3: Keysym = @enumFromInt(0x10006f3);
    pub const Farsi_4: Keysym = @enumFromInt(0x10006f4);
    pub const Farsi_5: Keysym = @enumFromInt(0x10006f5);
    pub const Farsi_6: Keysym = @enumFromInt(0x10006f6);
    pub const Farsi_7: Keysym = @enumFromInt(0x10006f7);
    pub const Farsi_8: Keysym = @enumFromInt(0x10006f8);
    pub const Farsi_9: Keysym = @enumFromInt(0x10006f9);
    pub const Arabic_percent: Keysym = @enumFromInt(0x100066a);
    pub const Arabic_superscript_alef: Keysym = @enumFromInt(0x1000670);
    pub const Arabic_tteh: Keysym = @enumFromInt(0x1000679);
    pub const Arabic_peh: Keysym = @enumFromInt(0x100067e);
    pub const Arabic_tcheh: Keysym = @enumFromInt(0x1000686);
    pub const Arabic_ddal: Keysym = @enumFromInt(0x1000688);
    pub const Arabic_rreh: Keysym = @enumFromInt(0x1000691);
    pub const Arabic_comma: Keysym = @enumFromInt(0x05ac);
    pub const Arabic_fullstop: Keysym = @enumFromInt(0x10006d4);
    pub const Arabic_0: Keysym = @enumFromInt(0x1000660);
    pub const Arabic_1: Keysym = @enumFromInt(0x1000661);
    pub const Arabic_2: Keysym = @enumFromInt(0x1000662);
    pub const Arabic_3: Keysym = @enumFromInt(0x1000663);
    pub const Arabic_4: Keysym = @enumFromInt(0x1000664);
    pub const Arabic_5: Keysym = @enumFromInt(0x1000665);
    pub const Arabic_6: Keysym = @enumFromInt(0x1000666);
    pub const Arabic_7: Keysym = @enumFromInt(0x1000667);
    pub const Arabic_8: Keysym = @enumFromInt(0x1000668);
    pub const Arabic_9: Keysym = @enumFromInt(0x1000669);
    pub const Arabic_semicolon: Keysym = @enumFromInt(0x05bb);
    pub const Arabic_question_mark: Keysym = @enumFromInt(0x05bf);
    pub const Arabic_hamza: Keysym = @enumFromInt(0x05c1);
    pub const Arabic_maddaonalef: Keysym = @enumFromInt(0x05c2);
    pub const Arabic_hamzaonalef: Keysym = @enumFromInt(0x05c3);
    pub const Arabic_hamzaonwaw: Keysym = @enumFromInt(0x05c4);
    pub const Arabic_hamzaunderalef: Keysym = @enumFromInt(0x05c5);
    pub const Arabic_hamzaonyeh: Keysym = @enumFromInt(0x05c6);
    pub const Arabic_alef: Keysym = @enumFromInt(0x05c7);
    pub const Arabic_beh: Keysym = @enumFromInt(0x05c8);
    pub const Arabic_tehmarbuta: Keysym = @enumFromInt(0x05c9);
    pub const Arabic_teh: Keysym = @enumFromInt(0x05ca);
    pub const Arabic_theh: Keysym = @enumFromInt(0x05cb);
    pub const Arabic_jeem: Keysym = @enumFromInt(0x05cc);
    pub const Arabic_hah: Keysym = @enumFromInt(0x05cd);
    pub const Arabic_khah: Keysym = @enumFromInt(0x05ce);
    pub const Arabic_dal: Keysym = @enumFromInt(0x05cf);
    pub const Arabic_thal: Keysym = @enumFromInt(0x05d0);
    pub const Arabic_ra: Keysym = @enumFromInt(0x05d1);
    pub const Arabic_zain: Keysym = @enumFromInt(0x05d2);
    pub const Arabic_seen: Keysym = @enumFromInt(0x05d3);
    pub const Arabic_sheen: Keysym = @enumFromInt(0x05d4);
    pub const Arabic_sad: Keysym = @enumFromInt(0x05d5);
    pub const Arabic_dad: Keysym = @enumFromInt(0x05d6);
    pub const Arabic_tah: Keysym = @enumFromInt(0x05d7);
    pub const Arabic_zah: Keysym = @enumFromInt(0x05d8);
    pub const Arabic_ain: Keysym = @enumFromInt(0x05d9);
    pub const Arabic_ghain: Keysym = @enumFromInt(0x05da);
    pub const Arabic_tatweel: Keysym = @enumFromInt(0x05e0);
    pub const Arabic_feh: Keysym = @enumFromInt(0x05e1);
    pub const Arabic_qaf: Keysym = @enumFromInt(0x05e2);
    pub const Arabic_kaf: Keysym = @enumFromInt(0x05e3);
    pub const Arabic_lam: Keysym = @enumFromInt(0x05e4);
    pub const Arabic_meem: Keysym = @enumFromInt(0x05e5);
    pub const Arabic_noon: Keysym = @enumFromInt(0x05e6);
    pub const Arabic_ha: Keysym = @enumFromInt(0x05e7);
    pub const Arabic_heh: Keysym = @enumFromInt(0x05e7);
    pub const Arabic_waw: Keysym = @enumFromInt(0x05e8);
    pub const Arabic_alefmaksura: Keysym = @enumFromInt(0x05e9);
    pub const Arabic_yeh: Keysym = @enumFromInt(0x05ea);
    pub const Arabic_fathatan: Keysym = @enumFromInt(0x05eb);
    pub const Arabic_dammatan: Keysym = @enumFromInt(0x05ec);
    pub const Arabic_kasratan: Keysym = @enumFromInt(0x05ed);
    pub const Arabic_fatha: Keysym = @enumFromInt(0x05ee);
    pub const Arabic_damma: Keysym = @enumFromInt(0x05ef);
    pub const Arabic_kasra: Keysym = @enumFromInt(0x05f0);
    pub const Arabic_shadda: Keysym = @enumFromInt(0x05f1);
    pub const Arabic_sukun: Keysym = @enumFromInt(0x05f2);
    pub const Arabic_madda_above: Keysym = @enumFromInt(0x1000653);
    pub const Arabic_hamza_above: Keysym = @enumFromInt(0x1000654);
    pub const Arabic_hamza_below: Keysym = @enumFromInt(0x1000655);
    pub const Arabic_jeh: Keysym = @enumFromInt(0x1000698);
    pub const Arabic_veh: Keysym = @enumFromInt(0x10006a4);
    pub const Arabic_keheh: Keysym = @enumFromInt(0x10006a9);
    pub const Arabic_gaf: Keysym = @enumFromInt(0x10006af);
    pub const Arabic_noon_ghunna: Keysym = @enumFromInt(0x10006ba);
    pub const Arabic_heh_doachashmee: Keysym = @enumFromInt(0x10006be);
    pub const Farsi_yeh: Keysym = @enumFromInt(0x10006cc);
    pub const Arabic_farsi_yeh: Keysym = @enumFromInt(0x10006cc);
    pub const Arabic_yeh_baree: Keysym = @enumFromInt(0x10006d2);
    pub const Arabic_heh_goal: Keysym = @enumFromInt(0x10006c1);
    pub const Arabic_switch: Keysym = @enumFromInt(0xff7e);

    pub const Cyrillic_GHE_bar: Keysym = @enumFromInt(0x1000492);
    pub const Cyrillic_ghe_bar: Keysym = @enumFromInt(0x1000493);
    pub const Cyrillic_ZHE_descender: Keysym = @enumFromInt(0x1000496);
    pub const Cyrillic_zhe_descender: Keysym = @enumFromInt(0x1000497);
    pub const Cyrillic_KA_descender: Keysym = @enumFromInt(0x100049a);
    pub const Cyrillic_ka_descender: Keysym = @enumFromInt(0x100049b);
    pub const Cyrillic_KA_vertstroke: Keysym = @enumFromInt(0x100049c);
    pub const Cyrillic_ka_vertstroke: Keysym = @enumFromInt(0x100049d);
    pub const Cyrillic_EN_descender: Keysym = @enumFromInt(0x10004a2);
    pub const Cyrillic_en_descender: Keysym = @enumFromInt(0x10004a3);
    pub const Cyrillic_U_straight: Keysym = @enumFromInt(0x10004ae);
    pub const Cyrillic_u_straight: Keysym = @enumFromInt(0x10004af);
    pub const Cyrillic_U_straight_bar: Keysym = @enumFromInt(0x10004b0);
    pub const Cyrillic_u_straight_bar: Keysym = @enumFromInt(0x10004b1);
    pub const Cyrillic_HA_descender: Keysym = @enumFromInt(0x10004b2);
    pub const Cyrillic_ha_descender: Keysym = @enumFromInt(0x10004b3);
    pub const Cyrillic_CHE_descender: Keysym = @enumFromInt(0x10004b6);
    pub const Cyrillic_che_descender: Keysym = @enumFromInt(0x10004b7);
    pub const Cyrillic_CHE_vertstroke: Keysym = @enumFromInt(0x10004b8);
    pub const Cyrillic_che_vertstroke: Keysym = @enumFromInt(0x10004b9);
    pub const Cyrillic_SHHA: Keysym = @enumFromInt(0x10004ba);
    pub const Cyrillic_shha: Keysym = @enumFromInt(0x10004bb);
    pub const Cyrillic_SCHWA: Keysym = @enumFromInt(0x10004d8);
    pub const Cyrillic_schwa: Keysym = @enumFromInt(0x10004d9);
    pub const Cyrillic_I_macron: Keysym = @enumFromInt(0x10004e2);
    pub const Cyrillic_i_macron: Keysym = @enumFromInt(0x10004e3);
    pub const Cyrillic_O_bar: Keysym = @enumFromInt(0x10004e8);
    pub const Cyrillic_o_bar: Keysym = @enumFromInt(0x10004e9);
    pub const Cyrillic_U_macron: Keysym = @enumFromInt(0x10004ee);
    pub const Cyrillic_u_macron: Keysym = @enumFromInt(0x10004ef);
    pub const Serbian_dje: Keysym = @enumFromInt(0x06a1);
    pub const Macedonia_gje: Keysym = @enumFromInt(0x06a2);
    pub const Cyrillic_io: Keysym = @enumFromInt(0x06a3);
    pub const Ukrainian_ie: Keysym = @enumFromInt(0x06a4);
    pub const Ukranian_je: Keysym = @enumFromInt(0x06a4);
    pub const Macedonia_dse: Keysym = @enumFromInt(0x06a5);
    pub const Ukrainian_i: Keysym = @enumFromInt(0x06a6);
    pub const Ukranian_i: Keysym = @enumFromInt(0x06a6);
    pub const Ukrainian_yi: Keysym = @enumFromInt(0x06a7);
    pub const Ukranian_yi: Keysym = @enumFromInt(0x06a7);
    pub const Cyrillic_je: Keysym = @enumFromInt(0x06a8);
    pub const Serbian_je: Keysym = @enumFromInt(0x06a8);
    pub const Cyrillic_lje: Keysym = @enumFromInt(0x06a9);
    pub const Serbian_lje: Keysym = @enumFromInt(0x06a9);
    pub const Cyrillic_nje: Keysym = @enumFromInt(0x06aa);
    pub const Serbian_nje: Keysym = @enumFromInt(0x06aa);
    pub const Serbian_tshe: Keysym = @enumFromInt(0x06ab);
    pub const Macedonia_kje: Keysym = @enumFromInt(0x06ac);
    pub const Ukrainian_ghe_with_upturn: Keysym = @enumFromInt(0x06ad);
    pub const Byelorussian_shortu: Keysym = @enumFromInt(0x06ae);
    pub const Cyrillic_dzhe: Keysym = @enumFromInt(0x06af);
    pub const Serbian_dze: Keysym = @enumFromInt(0x06af);
    pub const numerosign: Keysym = @enumFromInt(0x06b0);
    pub const Serbian_DJE: Keysym = @enumFromInt(0x06b1);
    pub const Macedonia_GJE: Keysym = @enumFromInt(0x06b2);
    pub const Cyrillic_IO: Keysym = @enumFromInt(0x06b3);
    pub const Ukrainian_IE: Keysym = @enumFromInt(0x06b4);
    pub const Ukranian_JE: Keysym = @enumFromInt(0x06b4);
    pub const Macedonia_DSE: Keysym = @enumFromInt(0x06b5);
    pub const Ukrainian_I: Keysym = @enumFromInt(0x06b6);
    pub const Ukranian_I: Keysym = @enumFromInt(0x06b6);
    pub const Ukrainian_YI: Keysym = @enumFromInt(0x06b7);
    pub const Ukranian_YI: Keysym = @enumFromInt(0x06b7);
    pub const Cyrillic_JE: Keysym = @enumFromInt(0x06b8);
    pub const Serbian_JE: Keysym = @enumFromInt(0x06b8);
    pub const Cyrillic_LJE: Keysym = @enumFromInt(0x06b9);
    pub const Serbian_LJE: Keysym = @enumFromInt(0x06b9);
    pub const Cyrillic_NJE: Keysym = @enumFromInt(0x06ba);
    pub const Serbian_NJE: Keysym = @enumFromInt(0x06ba);
    pub const Serbian_TSHE: Keysym = @enumFromInt(0x06bb);
    pub const Macedonia_KJE: Keysym = @enumFromInt(0x06bc);
    pub const Ukrainian_GHE_WITH_UPTURN: Keysym = @enumFromInt(0x06bd);
    pub const Byelorussian_SHORTU: Keysym = @enumFromInt(0x06be);
    pub const Cyrillic_DZHE: Keysym = @enumFromInt(0x06bf);
    pub const Serbian_DZE: Keysym = @enumFromInt(0x06bf);
    pub const Cyrillic_yu: Keysym = @enumFromInt(0x06c0);
    pub const Cyrillic_a: Keysym = @enumFromInt(0x06c1);
    pub const Cyrillic_be: Keysym = @enumFromInt(0x06c2);
    pub const Cyrillic_tse: Keysym = @enumFromInt(0x06c3);
    pub const Cyrillic_de: Keysym = @enumFromInt(0x06c4);
    pub const Cyrillic_ie: Keysym = @enumFromInt(0x06c5);
    pub const Cyrillic_ef: Keysym = @enumFromInt(0x06c6);
    pub const Cyrillic_ghe: Keysym = @enumFromInt(0x06c7);
    pub const Cyrillic_ha: Keysym = @enumFromInt(0x06c8);
    pub const Cyrillic_i: Keysym = @enumFromInt(0x06c9);
    pub const Cyrillic_shorti: Keysym = @enumFromInt(0x06ca);
    pub const Cyrillic_ka: Keysym = @enumFromInt(0x06cb);
    pub const Cyrillic_el: Keysym = @enumFromInt(0x06cc);
    pub const Cyrillic_em: Keysym = @enumFromInt(0x06cd);
    pub const Cyrillic_en: Keysym = @enumFromInt(0x06ce);
    pub const Cyrillic_o: Keysym = @enumFromInt(0x06cf);
    pub const Cyrillic_pe: Keysym = @enumFromInt(0x06d0);
    pub const Cyrillic_ya: Keysym = @enumFromInt(0x06d1);
    pub const Cyrillic_er: Keysym = @enumFromInt(0x06d2);
    pub const Cyrillic_es: Keysym = @enumFromInt(0x06d3);
    pub const Cyrillic_te: Keysym = @enumFromInt(0x06d4);
    pub const Cyrillic_u: Keysym = @enumFromInt(0x06d5);
    pub const Cyrillic_zhe: Keysym = @enumFromInt(0x06d6);
    pub const Cyrillic_ve: Keysym = @enumFromInt(0x06d7);
    pub const Cyrillic_softsign: Keysym = @enumFromInt(0x06d8);
    pub const Cyrillic_yeru: Keysym = @enumFromInt(0x06d9);
    pub const Cyrillic_ze: Keysym = @enumFromInt(0x06da);
    pub const Cyrillic_sha: Keysym = @enumFromInt(0x06db);
    pub const Cyrillic_e: Keysym = @enumFromInt(0x06dc);
    pub const Cyrillic_shcha: Keysym = @enumFromInt(0x06dd);
    pub const Cyrillic_che: Keysym = @enumFromInt(0x06de);
    pub const Cyrillic_hardsign: Keysym = @enumFromInt(0x06df);
    pub const Cyrillic_YU: Keysym = @enumFromInt(0x06e0);
    pub const Cyrillic_A: Keysym = @enumFromInt(0x06e1);
    pub const Cyrillic_BE: Keysym = @enumFromInt(0x06e2);
    pub const Cyrillic_TSE: Keysym = @enumFromInt(0x06e3);
    pub const Cyrillic_DE: Keysym = @enumFromInt(0x06e4);
    pub const Cyrillic_IE: Keysym = @enumFromInt(0x06e5);
    pub const Cyrillic_EF: Keysym = @enumFromInt(0x06e6);
    pub const Cyrillic_GHE: Keysym = @enumFromInt(0x06e7);
    pub const Cyrillic_HA: Keysym = @enumFromInt(0x06e8);
    pub const Cyrillic_I: Keysym = @enumFromInt(0x06e9);
    pub const Cyrillic_SHORTI: Keysym = @enumFromInt(0x06ea);
    pub const Cyrillic_KA: Keysym = @enumFromInt(0x06eb);
    pub const Cyrillic_EL: Keysym = @enumFromInt(0x06ec);
    pub const Cyrillic_EM: Keysym = @enumFromInt(0x06ed);
    pub const Cyrillic_EN: Keysym = @enumFromInt(0x06ee);
    pub const Cyrillic_O: Keysym = @enumFromInt(0x06ef);
    pub const Cyrillic_PE: Keysym = @enumFromInt(0x06f0);
    pub const Cyrillic_YA: Keysym = @enumFromInt(0x06f1);
    pub const Cyrillic_ER: Keysym = @enumFromInt(0x06f2);
    pub const Cyrillic_ES: Keysym = @enumFromInt(0x06f3);
    pub const Cyrillic_TE: Keysym = @enumFromInt(0x06f4);
    pub const Cyrillic_U: Keysym = @enumFromInt(0x06f5);
    pub const Cyrillic_ZHE: Keysym = @enumFromInt(0x06f6);
    pub const Cyrillic_VE: Keysym = @enumFromInt(0x06f7);
    pub const Cyrillic_SOFTSIGN: Keysym = @enumFromInt(0x06f8);
    pub const Cyrillic_YERU: Keysym = @enumFromInt(0x06f9);
    pub const Cyrillic_ZE: Keysym = @enumFromInt(0x06fa);
    pub const Cyrillic_SHA: Keysym = @enumFromInt(0x06fb);
    pub const Cyrillic_E: Keysym = @enumFromInt(0x06fc);
    pub const Cyrillic_SHCHA: Keysym = @enumFromInt(0x06fd);
    pub const Cyrillic_CHE: Keysym = @enumFromInt(0x06fe);
    pub const Cyrillic_HARDSIGN: Keysym = @enumFromInt(0x06ff);

    pub const Greek_ALPHAaccent: Keysym = @enumFromInt(0x07a1);
    pub const Greek_EPSILONaccent: Keysym = @enumFromInt(0x07a2);
    pub const Greek_ETAaccent: Keysym = @enumFromInt(0x07a3);
    pub const Greek_IOTAaccent: Keysym = @enumFromInt(0x07a4);
    pub const Greek_IOTAdieresis: Keysym = @enumFromInt(0x07a5);
    pub const Greek_IOTAdiaeresis: Keysym = @enumFromInt(0x07a5);
    pub const Greek_OMICRONaccent: Keysym = @enumFromInt(0x07a7);
    pub const Greek_UPSILONaccent: Keysym = @enumFromInt(0x07a8);
    pub const Greek_UPSILONdieresis: Keysym = @enumFromInt(0x07a9);
    pub const Greek_OMEGAaccent: Keysym = @enumFromInt(0x07ab);
    pub const Greek_accentdieresis: Keysym = @enumFromInt(0x07ae);
    pub const Greek_horizbar: Keysym = @enumFromInt(0x07af);
    pub const Greek_alphaaccent: Keysym = @enumFromInt(0x07b1);
    pub const Greek_epsilonaccent: Keysym = @enumFromInt(0x07b2);
    pub const Greek_etaaccent: Keysym = @enumFromInt(0x07b3);
    pub const Greek_iotaaccent: Keysym = @enumFromInt(0x07b4);
    pub const Greek_iotadieresis: Keysym = @enumFromInt(0x07b5);
    pub const Greek_iotaaccentdieresis: Keysym = @enumFromInt(0x07b6);
    pub const Greek_omicronaccent: Keysym = @enumFromInt(0x07b7);
    pub const Greek_upsilonaccent: Keysym = @enumFromInt(0x07b8);
    pub const Greek_upsilondieresis: Keysym = @enumFromInt(0x07b9);
    pub const Greek_upsilonaccentdieresis: Keysym = @enumFromInt(0x07ba);
    pub const Greek_omegaaccent: Keysym = @enumFromInt(0x07bb);
    pub const Greek_ALPHA: Keysym = @enumFromInt(0x07c1);
    pub const Greek_BETA: Keysym = @enumFromInt(0x07c2);
    pub const Greek_GAMMA: Keysym = @enumFromInt(0x07c3);
    pub const Greek_DELTA: Keysym = @enumFromInt(0x07c4);
    pub const Greek_EPSILON: Keysym = @enumFromInt(0x07c5);
    pub const Greek_ZETA: Keysym = @enumFromInt(0x07c6);
    pub const Greek_ETA: Keysym = @enumFromInt(0x07c7);
    pub const Greek_THETA: Keysym = @enumFromInt(0x07c8);
    pub const Greek_IOTA: Keysym = @enumFromInt(0x07c9);
    pub const Greek_KAPPA: Keysym = @enumFromInt(0x07ca);
    pub const Greek_LAMDA: Keysym = @enumFromInt(0x07cb);
    pub const Greek_LAMBDA: Keysym = @enumFromInt(0x07cb);
    pub const Greek_MU: Keysym = @enumFromInt(0x07cc);
    pub const Greek_NU: Keysym = @enumFromInt(0x07cd);
    pub const Greek_XI: Keysym = @enumFromInt(0x07ce);
    pub const Greek_OMICRON: Keysym = @enumFromInt(0x07cf);
    pub const Greek_PI: Keysym = @enumFromInt(0x07d0);
    pub const Greek_RHO: Keysym = @enumFromInt(0x07d1);
    pub const Greek_SIGMA: Keysym = @enumFromInt(0x07d2);
    pub const Greek_TAU: Keysym = @enumFromInt(0x07d4);
    pub const Greek_UPSILON: Keysym = @enumFromInt(0x07d5);
    pub const Greek_PHI: Keysym = @enumFromInt(0x07d6);
    pub const Greek_CHI: Keysym = @enumFromInt(0x07d7);
    pub const Greek_PSI: Keysym = @enumFromInt(0x07d8);
    pub const Greek_OMEGA: Keysym = @enumFromInt(0x07d9);
    pub const Greek_alpha: Keysym = @enumFromInt(0x07e1);
    pub const Greek_beta: Keysym = @enumFromInt(0x07e2);
    pub const Greek_gamma: Keysym = @enumFromInt(0x07e3);
    pub const Greek_delta: Keysym = @enumFromInt(0x07e4);
    pub const Greek_epsilon: Keysym = @enumFromInt(0x07e5);
    pub const Greek_zeta: Keysym = @enumFromInt(0x07e6);
    pub const Greek_eta: Keysym = @enumFromInt(0x07e7);
    pub const Greek_theta: Keysym = @enumFromInt(0x07e8);
    pub const Greek_iota: Keysym = @enumFromInt(0x07e9);
    pub const Greek_kappa: Keysym = @enumFromInt(0x07ea);
    pub const Greek_lamda: Keysym = @enumFromInt(0x07eb);
    pub const Greek_lambda: Keysym = @enumFromInt(0x07eb);
    pub const Greek_mu: Keysym = @enumFromInt(0x07ec);
    pub const Greek_nu: Keysym = @enumFromInt(0x07ed);
    pub const Greek_xi: Keysym = @enumFromInt(0x07ee);
    pub const Greek_omicron: Keysym = @enumFromInt(0x07ef);
    pub const Greek_pi: Keysym = @enumFromInt(0x07f0);
    pub const Greek_rho: Keysym = @enumFromInt(0x07f1);
    pub const Greek_sigma: Keysym = @enumFromInt(0x07f2);
    pub const Greek_finalsmallsigma: Keysym = @enumFromInt(0x07f3);
    pub const Greek_tau: Keysym = @enumFromInt(0x07f4);
    pub const Greek_upsilon: Keysym = @enumFromInt(0x07f5);
    pub const Greek_phi: Keysym = @enumFromInt(0x07f6);
    pub const Greek_chi: Keysym = @enumFromInt(0x07f7);
    pub const Greek_psi: Keysym = @enumFromInt(0x07f8);
    pub const Greek_omega: Keysym = @enumFromInt(0x07f9);
    pub const Greek_switch: Keysym = @enumFromInt(0xff7e);

    pub const leftradical: Keysym = @enumFromInt(0x08a1);
    pub const topleftradical: Keysym = @enumFromInt(0x08a2);
    pub const horizconnector: Keysym = @enumFromInt(0x08a3);
    pub const topintegral: Keysym = @enumFromInt(0x08a4);
    pub const botintegral: Keysym = @enumFromInt(0x08a5);
    pub const vertconnector: Keysym = @enumFromInt(0x08a6);
    pub const topleftsqbracket: Keysym = @enumFromInt(0x08a7);
    pub const botleftsqbracket: Keysym = @enumFromInt(0x08a8);
    pub const toprightsqbracket: Keysym = @enumFromInt(0x08a9);
    pub const botrightsqbracket: Keysym = @enumFromInt(0x08aa);
    pub const topleftparens: Keysym = @enumFromInt(0x08ab);
    pub const botleftparens: Keysym = @enumFromInt(0x08ac);
    pub const toprightparens: Keysym = @enumFromInt(0x08ad);
    pub const botrightparens: Keysym = @enumFromInt(0x08ae);
    pub const leftmiddlecurlybrace: Keysym = @enumFromInt(0x08af);
    pub const rightmiddlecurlybrace: Keysym = @enumFromInt(0x08b0);
    pub const topleftsummation: Keysym = @enumFromInt(0x08b1);
    pub const botleftsummation: Keysym = @enumFromInt(0x08b2);
    pub const topvertsummationconnector: Keysym = @enumFromInt(0x08b3);
    pub const botvertsummationconnector: Keysym = @enumFromInt(0x08b4);
    pub const toprightsummation: Keysym = @enumFromInt(0x08b5);
    pub const botrightsummation: Keysym = @enumFromInt(0x08b6);
    pub const rightmiddlesummation: Keysym = @enumFromInt(0x08b7);
    pub const lessthanequal: Keysym = @enumFromInt(0x08bc);
    pub const notequal: Keysym = @enumFromInt(0x08bd);
    pub const greaterthanequal: Keysym = @enumFromInt(0x08be);
    pub const integral: Keysym = @enumFromInt(0x08bf);
    pub const therefore: Keysym = @enumFromInt(0x08c0);
    pub const variation: Keysym = @enumFromInt(0x08c1);
    pub const infinity: Keysym = @enumFromInt(0x08c2);
    pub const nabla: Keysym = @enumFromInt(0x08c5);
    pub const approximate: Keysym = @enumFromInt(0x08c8);
    pub const similarequal: Keysym = @enumFromInt(0x08c9);
    pub const ifonlyif: Keysym = @enumFromInt(0x08cd);
    pub const implies: Keysym = @enumFromInt(0x08ce);
    pub const identical: Keysym = @enumFromInt(0x08cf);
    pub const radical: Keysym = @enumFromInt(0x08d6);
    pub const includedin: Keysym = @enumFromInt(0x08da);
    pub const includes: Keysym = @enumFromInt(0x08db);
    pub const intersection: Keysym = @enumFromInt(0x08dc);
    pub const @"union": Keysym = @enumFromInt(0x08dd);
    pub const logicaland: Keysym = @enumFromInt(0x08de);
    pub const logicalor: Keysym = @enumFromInt(0x08df);
    pub const partialderivative: Keysym = @enumFromInt(0x08ef);
    pub const function: Keysym = @enumFromInt(0x08f6);
    pub const leftarrow: Keysym = @enumFromInt(0x08fb);
    pub const uparrow: Keysym = @enumFromInt(0x08fc);
    pub const rightarrow: Keysym = @enumFromInt(0x08fd);
    pub const downarrow: Keysym = @enumFromInt(0x08fe);

    pub const blank: Keysym = @enumFromInt(0x09df);
    pub const soliddiamond: Keysym = @enumFromInt(0x09e0);
    pub const checkerboard: Keysym = @enumFromInt(0x09e1);
    pub const ht: Keysym = @enumFromInt(0x09e2);
    pub const ff: Keysym = @enumFromInt(0x09e3);
    pub const cr: Keysym = @enumFromInt(0x09e4);
    pub const lf: Keysym = @enumFromInt(0x09e5);
    pub const nl: Keysym = @enumFromInt(0x09e8);
    pub const vt: Keysym = @enumFromInt(0x09e9);
    pub const lowrightcorner: Keysym = @enumFromInt(0x09ea);
    pub const uprightcorner: Keysym = @enumFromInt(0x09eb);
    pub const upleftcorner: Keysym = @enumFromInt(0x09ec);
    pub const lowleftcorner: Keysym = @enumFromInt(0x09ed);
    pub const crossinglines: Keysym = @enumFromInt(0x09ee);
    pub const horizlinescan1: Keysym = @enumFromInt(0x09ef);
    pub const horizlinescan3: Keysym = @enumFromInt(0x09f0);
    pub const horizlinescan5: Keysym = @enumFromInt(0x09f1);
    pub const horizlinescan7: Keysym = @enumFromInt(0x09f2);
    pub const horizlinescan9: Keysym = @enumFromInt(0x09f3);
    pub const leftt: Keysym = @enumFromInt(0x09f4);
    pub const rightt: Keysym = @enumFromInt(0x09f5);
    pub const bott: Keysym = @enumFromInt(0x09f6);
    pub const topt: Keysym = @enumFromInt(0x09f7);
    pub const vertbar: Keysym = @enumFromInt(0x09f8);

    pub const emspace: Keysym = @enumFromInt(0x0aa1);
    pub const enspace: Keysym = @enumFromInt(0x0aa2);
    pub const em3space: Keysym = @enumFromInt(0x0aa3);
    pub const em4space: Keysym = @enumFromInt(0x0aa4);
    pub const digitspace: Keysym = @enumFromInt(0x0aa5);
    pub const punctspace: Keysym = @enumFromInt(0x0aa6);
    pub const thinspace: Keysym = @enumFromInt(0x0aa7);
    pub const hairspace: Keysym = @enumFromInt(0x0aa8);
    pub const emdash: Keysym = @enumFromInt(0x0aa9);
    pub const endash: Keysym = @enumFromInt(0x0aaa);
    pub const signifblank: Keysym = @enumFromInt(0x0aac);
    pub const ellipsis: Keysym = @enumFromInt(0x0aae);
    pub const doubbaselinedot: Keysym = @enumFromInt(0x0aaf);
    pub const onethird: Keysym = @enumFromInt(0x0ab0);
    pub const twothirds: Keysym = @enumFromInt(0x0ab1);
    pub const onefifth: Keysym = @enumFromInt(0x0ab2);
    pub const twofifths: Keysym = @enumFromInt(0x0ab3);
    pub const threefifths: Keysym = @enumFromInt(0x0ab4);
    pub const fourfifths: Keysym = @enumFromInt(0x0ab5);
    pub const onesixth: Keysym = @enumFromInt(0x0ab6);
    pub const fivesixths: Keysym = @enumFromInt(0x0ab7);
    pub const careof: Keysym = @enumFromInt(0x0ab8);
    pub const figdash: Keysym = @enumFromInt(0x0abb);
    pub const leftanglebracket: Keysym = @enumFromInt(0x0abc);
    pub const decimalpoint: Keysym = @enumFromInt(0x0abd);
    pub const rightanglebracket: Keysym = @enumFromInt(0x0abe);
    pub const marker: Keysym = @enumFromInt(0x0abf);
    pub const oneeighth: Keysym = @enumFromInt(0x0ac3);
    pub const threeeighths: Keysym = @enumFromInt(0x0ac4);
    pub const fiveeighths: Keysym = @enumFromInt(0x0ac5);
    pub const seveneighths: Keysym = @enumFromInt(0x0ac6);
    pub const trademark: Keysym = @enumFromInt(0x0ac9);
    pub const signaturemark: Keysym = @enumFromInt(0x0aca);
    pub const trademarkincircle: Keysym = @enumFromInt(0x0acb);
    pub const leftopentriangle: Keysym = @enumFromInt(0x0acc);
    pub const rightopentriangle: Keysym = @enumFromInt(0x0acd);
    pub const emopencircle: Keysym = @enumFromInt(0x0ace);
    pub const emopenrectangle: Keysym = @enumFromInt(0x0acf);
    pub const leftsinglequotemark: Keysym = @enumFromInt(0x0ad0);
    pub const rightsinglequotemark: Keysym = @enumFromInt(0x0ad1);
    pub const leftdoublequotemark: Keysym = @enumFromInt(0x0ad2);
    pub const rightdoublequotemark: Keysym = @enumFromInt(0x0ad3);
    pub const prescription: Keysym = @enumFromInt(0x0ad4);
    pub const permille: Keysym = @enumFromInt(0x0ad5);
    pub const minutes: Keysym = @enumFromInt(0x0ad6);
    pub const seconds: Keysym = @enumFromInt(0x0ad7);
    pub const latincross: Keysym = @enumFromInt(0x0ad9);
    pub const hexagram: Keysym = @enumFromInt(0x0ada);
    pub const filledrectbullet: Keysym = @enumFromInt(0x0adb);
    pub const filledlefttribullet: Keysym = @enumFromInt(0x0adc);
    pub const filledrighttribullet: Keysym = @enumFromInt(0x0add);
    pub const emfilledcircle: Keysym = @enumFromInt(0x0ade);
    pub const emfilledrect: Keysym = @enumFromInt(0x0adf);
    pub const enopencircbullet: Keysym = @enumFromInt(0x0ae0);
    pub const enopensquarebullet: Keysym = @enumFromInt(0x0ae1);
    pub const openrectbullet: Keysym = @enumFromInt(0x0ae2);
    pub const opentribulletup: Keysym = @enumFromInt(0x0ae3);
    pub const opentribulletdown: Keysym = @enumFromInt(0x0ae4);
    pub const openstar: Keysym = @enumFromInt(0x0ae5);
    pub const enfilledcircbullet: Keysym = @enumFromInt(0x0ae6);
    pub const enfilledsqbullet: Keysym = @enumFromInt(0x0ae7);
    pub const filledtribulletup: Keysym = @enumFromInt(0x0ae8);
    pub const filledtribulletdown: Keysym = @enumFromInt(0x0ae9);
    pub const leftpointer: Keysym = @enumFromInt(0x0aea);
    pub const rightpointer: Keysym = @enumFromInt(0x0aeb);
    pub const club: Keysym = @enumFromInt(0x0aec);
    pub const diamond: Keysym = @enumFromInt(0x0aed);
    pub const heart: Keysym = @enumFromInt(0x0aee);
    pub const maltesecross: Keysym = @enumFromInt(0x0af0);
    pub const dagger: Keysym = @enumFromInt(0x0af1);
    pub const doubledagger: Keysym = @enumFromInt(0x0af2);
    pub const checkmark: Keysym = @enumFromInt(0x0af3);
    pub const ballotcross: Keysym = @enumFromInt(0x0af4);
    pub const musicalsharp: Keysym = @enumFromInt(0x0af5);
    pub const musicalflat: Keysym = @enumFromInt(0x0af6);
    pub const malesymbol: Keysym = @enumFromInt(0x0af7);
    pub const femalesymbol: Keysym = @enumFromInt(0x0af8);
    pub const telephone: Keysym = @enumFromInt(0x0af9);
    pub const telephonerecorder: Keysym = @enumFromInt(0x0afa);
    pub const phonographcopyright: Keysym = @enumFromInt(0x0afb);
    pub const caret: Keysym = @enumFromInt(0x0afc);
    pub const singlelowquotemark: Keysym = @enumFromInt(0x0afd);
    pub const doublelowquotemark: Keysym = @enumFromInt(0x0afe);
    pub const cursor: Keysym = @enumFromInt(0x0aff);

    pub const leftcaret: Keysym = @enumFromInt(0x0ba3);
    pub const rightcaret: Keysym = @enumFromInt(0x0ba6);
    pub const downcaret: Keysym = @enumFromInt(0x0ba8);
    pub const upcaret: Keysym = @enumFromInt(0x0ba9);
    pub const overbar: Keysym = @enumFromInt(0x0bc0);
    pub const downtack: Keysym = @enumFromInt(0x0bc2);
    pub const upshoe: Keysym = @enumFromInt(0x0bc3);
    pub const downstile: Keysym = @enumFromInt(0x0bc4);
    pub const underbar: Keysym = @enumFromInt(0x0bc6);
    pub const jot: Keysym = @enumFromInt(0x0bca);
    pub const quad: Keysym = @enumFromInt(0x0bcc);
    pub const uptack: Keysym = @enumFromInt(0x0bce);
    pub const circle: Keysym = @enumFromInt(0x0bcf);
    pub const upstile: Keysym = @enumFromInt(0x0bd3);
    pub const downshoe: Keysym = @enumFromInt(0x0bd6);
    pub const rightshoe: Keysym = @enumFromInt(0x0bd8);
    pub const leftshoe: Keysym = @enumFromInt(0x0bda);
    pub const lefttack: Keysym = @enumFromInt(0x0bdc);
    pub const righttack: Keysym = @enumFromInt(0x0bfc);

    pub const hebrew_doublelowline: Keysym = @enumFromInt(0x0cdf);
    pub const hebrew_aleph: Keysym = @enumFromInt(0x0ce0);
    pub const hebrew_bet: Keysym = @enumFromInt(0x0ce1);
    pub const hebrew_beth: Keysym = @enumFromInt(0x0ce1);
    pub const hebrew_gimel: Keysym = @enumFromInt(0x0ce2);
    pub const hebrew_gimmel: Keysym = @enumFromInt(0x0ce2);
    pub const hebrew_dalet: Keysym = @enumFromInt(0x0ce3);
    pub const hebrew_daleth: Keysym = @enumFromInt(0x0ce3);
    pub const hebrew_he: Keysym = @enumFromInt(0x0ce4);
    pub const hebrew_waw: Keysym = @enumFromInt(0x0ce5);
    pub const hebrew_zain: Keysym = @enumFromInt(0x0ce6);
    pub const hebrew_zayin: Keysym = @enumFromInt(0x0ce6);
    pub const hebrew_chet: Keysym = @enumFromInt(0x0ce7);
    pub const hebrew_het: Keysym = @enumFromInt(0x0ce7);
    pub const hebrew_tet: Keysym = @enumFromInt(0x0ce8);
    pub const hebrew_teth: Keysym = @enumFromInt(0x0ce8);
    pub const hebrew_yod: Keysym = @enumFromInt(0x0ce9);
    pub const hebrew_finalkaph: Keysym = @enumFromInt(0x0cea);
    pub const hebrew_kaph: Keysym = @enumFromInt(0x0ceb);
    pub const hebrew_lamed: Keysym = @enumFromInt(0x0cec);
    pub const hebrew_finalmem: Keysym = @enumFromInt(0x0ced);
    pub const hebrew_mem: Keysym = @enumFromInt(0x0cee);
    pub const hebrew_finalnun: Keysym = @enumFromInt(0x0cef);
    pub const hebrew_nun: Keysym = @enumFromInt(0x0cf0);
    pub const hebrew_samech: Keysym = @enumFromInt(0x0cf1);
    pub const hebrew_samekh: Keysym = @enumFromInt(0x0cf1);
    pub const hebrew_ayin: Keysym = @enumFromInt(0x0cf2);
    pub const hebrew_finalpe: Keysym = @enumFromInt(0x0cf3);
    pub const hebrew_pe: Keysym = @enumFromInt(0x0cf4);
    pub const hebrew_finalzade: Keysym = @enumFromInt(0x0cf5);
    pub const hebrew_finalzadi: Keysym = @enumFromInt(0x0cf5);
    pub const hebrew_zade: Keysym = @enumFromInt(0x0cf6);
    pub const hebrew_zadi: Keysym = @enumFromInt(0x0cf6);
    pub const hebrew_qoph: Keysym = @enumFromInt(0x0cf7);
    pub const hebrew_kuf: Keysym = @enumFromInt(0x0cf7);
    pub const hebrew_resh: Keysym = @enumFromInt(0x0cf8);
    pub const hebrew_shin: Keysym = @enumFromInt(0x0cf9);
    pub const hebrew_taw: Keysym = @enumFromInt(0x0cfa);
    pub const hebrew_taf: Keysym = @enumFromInt(0x0cfa);
    pub const Hebrew_switch: Keysym = @enumFromInt(0xff7e);

    pub const Thai_kokai: Keysym = @enumFromInt(0x0da1);
    pub const Thai_khokhai: Keysym = @enumFromInt(0x0da2);
    pub const Thai_khokhuat: Keysym = @enumFromInt(0x0da3);
    pub const Thai_khokhwai: Keysym = @enumFromInt(0x0da4);
    pub const Thai_khokhon: Keysym = @enumFromInt(0x0da5);
    pub const Thai_khorakhang: Keysym = @enumFromInt(0x0da6);
    pub const Thai_ngongu: Keysym = @enumFromInt(0x0da7);
    pub const Thai_chochan: Keysym = @enumFromInt(0x0da8);
    pub const Thai_choching: Keysym = @enumFromInt(0x0da9);
    pub const Thai_chochang: Keysym = @enumFromInt(0x0daa);
    pub const Thai_soso: Keysym = @enumFromInt(0x0dab);
    pub const Thai_chochoe: Keysym = @enumFromInt(0x0dac);
    pub const Thai_yoying: Keysym = @enumFromInt(0x0dad);
    pub const Thai_dochada: Keysym = @enumFromInt(0x0dae);
    pub const Thai_topatak: Keysym = @enumFromInt(0x0daf);
    pub const Thai_thothan: Keysym = @enumFromInt(0x0db0);
    pub const Thai_thonangmontho: Keysym = @enumFromInt(0x0db1);
    pub const Thai_thophuthao: Keysym = @enumFromInt(0x0db2);
    pub const Thai_nonen: Keysym = @enumFromInt(0x0db3);
    pub const Thai_dodek: Keysym = @enumFromInt(0x0db4);
    pub const Thai_totao: Keysym = @enumFromInt(0x0db5);
    pub const Thai_thothung: Keysym = @enumFromInt(0x0db6);
    pub const Thai_thothahan: Keysym = @enumFromInt(0x0db7);
    pub const Thai_thothong: Keysym = @enumFromInt(0x0db8);
    pub const Thai_nonu: Keysym = @enumFromInt(0x0db9);
    pub const Thai_bobaimai: Keysym = @enumFromInt(0x0dba);
    pub const Thai_popla: Keysym = @enumFromInt(0x0dbb);
    pub const Thai_phophung: Keysym = @enumFromInt(0x0dbc);
    pub const Thai_fofa: Keysym = @enumFromInt(0x0dbd);
    pub const Thai_phophan: Keysym = @enumFromInt(0x0dbe);
    pub const Thai_fofan: Keysym = @enumFromInt(0x0dbf);
    pub const Thai_phosamphao: Keysym = @enumFromInt(0x0dc0);
    pub const Thai_moma: Keysym = @enumFromInt(0x0dc1);
    pub const Thai_yoyak: Keysym = @enumFromInt(0x0dc2);
    pub const Thai_rorua: Keysym = @enumFromInt(0x0dc3);
    pub const Thai_ru: Keysym = @enumFromInt(0x0dc4);
    pub const Thai_loling: Keysym = @enumFromInt(0x0dc5);
    pub const Thai_lu: Keysym = @enumFromInt(0x0dc6);
    pub const Thai_wowaen: Keysym = @enumFromInt(0x0dc7);
    pub const Thai_sosala: Keysym = @enumFromInt(0x0dc8);
    pub const Thai_sorusi: Keysym = @enumFromInt(0x0dc9);
    pub const Thai_sosua: Keysym = @enumFromInt(0x0dca);
    pub const Thai_hohip: Keysym = @enumFromInt(0x0dcb);
    pub const Thai_lochula: Keysym = @enumFromInt(0x0dcc);
    pub const Thai_oang: Keysym = @enumFromInt(0x0dcd);
    pub const Thai_honokhuk: Keysym = @enumFromInt(0x0dce);
    pub const Thai_paiyannoi: Keysym = @enumFromInt(0x0dcf);
    pub const Thai_saraa: Keysym = @enumFromInt(0x0dd0);
    pub const Thai_maihanakat: Keysym = @enumFromInt(0x0dd1);
    pub const Thai_saraaa: Keysym = @enumFromInt(0x0dd2);
    pub const Thai_saraam: Keysym = @enumFromInt(0x0dd3);
    pub const Thai_sarai: Keysym = @enumFromInt(0x0dd4);
    pub const Thai_saraii: Keysym = @enumFromInt(0x0dd5);
    pub const Thai_saraue: Keysym = @enumFromInt(0x0dd6);
    pub const Thai_sarauee: Keysym = @enumFromInt(0x0dd7);
    pub const Thai_sarau: Keysym = @enumFromInt(0x0dd8);
    pub const Thai_sarauu: Keysym = @enumFromInt(0x0dd9);
    pub const Thai_phinthu: Keysym = @enumFromInt(0x0dda);
    pub const Thai_maihanakat_maitho: Keysym = @enumFromInt(0x0dde);
    pub const Thai_baht: Keysym = @enumFromInt(0x0ddf);
    pub const Thai_sarae: Keysym = @enumFromInt(0x0de0);
    pub const Thai_saraae: Keysym = @enumFromInt(0x0de1);
    pub const Thai_sarao: Keysym = @enumFromInt(0x0de2);
    pub const Thai_saraaimaimuan: Keysym = @enumFromInt(0x0de3);
    pub const Thai_saraaimaimalai: Keysym = @enumFromInt(0x0de4);
    pub const Thai_lakkhangyao: Keysym = @enumFromInt(0x0de5);
    pub const Thai_maiyamok: Keysym = @enumFromInt(0x0de6);
    pub const Thai_maitaikhu: Keysym = @enumFromInt(0x0de7);
    pub const Thai_maiek: Keysym = @enumFromInt(0x0de8);
    pub const Thai_maitho: Keysym = @enumFromInt(0x0de9);
    pub const Thai_maitri: Keysym = @enumFromInt(0x0dea);
    pub const Thai_maichattawa: Keysym = @enumFromInt(0x0deb);
    pub const Thai_thanthakhat: Keysym = @enumFromInt(0x0dec);
    pub const Thai_nikhahit: Keysym = @enumFromInt(0x0ded);
    pub const Thai_leksun: Keysym = @enumFromInt(0x0df0);
    pub const Thai_leknung: Keysym = @enumFromInt(0x0df1);
    pub const Thai_leksong: Keysym = @enumFromInt(0x0df2);
    pub const Thai_leksam: Keysym = @enumFromInt(0x0df3);
    pub const Thai_leksi: Keysym = @enumFromInt(0x0df4);
    pub const Thai_lekha: Keysym = @enumFromInt(0x0df5);
    pub const Thai_lekhok: Keysym = @enumFromInt(0x0df6);
    pub const Thai_lekchet: Keysym = @enumFromInt(0x0df7);
    pub const Thai_lekpaet: Keysym = @enumFromInt(0x0df8);
    pub const Thai_lekkao: Keysym = @enumFromInt(0x0df9);

    pub const Hangul: Keysym = @enumFromInt(0xff31);
    pub const Hangul_Start: Keysym = @enumFromInt(0xff32);
    pub const Hangul_End: Keysym = @enumFromInt(0xff33);
    pub const Hangul_Hanja: Keysym = @enumFromInt(0xff34);
    pub const Hangul_Jamo: Keysym = @enumFromInt(0xff35);
    pub const Hangul_Romaja: Keysym = @enumFromInt(0xff36);
    pub const Hangul_Codeinput: Keysym = @enumFromInt(0xff37);
    pub const Hangul_Jeonja: Keysym = @enumFromInt(0xff38);
    pub const Hangul_Banja: Keysym = @enumFromInt(0xff39);
    pub const Hangul_PreHanja: Keysym = @enumFromInt(0xff3a);
    pub const Hangul_PostHanja: Keysym = @enumFromInt(0xff3b);
    pub const Hangul_SingleCandidate: Keysym = @enumFromInt(0xff3c);
    pub const Hangul_MultipleCandidate: Keysym = @enumFromInt(0xff3d);
    pub const Hangul_PreviousCandidate: Keysym = @enumFromInt(0xff3e);
    pub const Hangul_Special: Keysym = @enumFromInt(0xff3f);
    pub const Hangul_switch: Keysym = @enumFromInt(0xff7e);
    pub const Hangul_Kiyeog: Keysym = @enumFromInt(0x0ea1);
    pub const Hangul_SsangKiyeog: Keysym = @enumFromInt(0x0ea2);
    pub const Hangul_KiyeogSios: Keysym = @enumFromInt(0x0ea3);
    pub const Hangul_Nieun: Keysym = @enumFromInt(0x0ea4);
    pub const Hangul_NieunJieuj: Keysym = @enumFromInt(0x0ea5);
    pub const Hangul_NieunHieuh: Keysym = @enumFromInt(0x0ea6);
    pub const Hangul_Dikeud: Keysym = @enumFromInt(0x0ea7);
    pub const Hangul_SsangDikeud: Keysym = @enumFromInt(0x0ea8);
    pub const Hangul_Rieul: Keysym = @enumFromInt(0x0ea9);
    pub const Hangul_RieulKiyeog: Keysym = @enumFromInt(0x0eaa);
    pub const Hangul_RieulMieum: Keysym = @enumFromInt(0x0eab);
    pub const Hangul_RieulPieub: Keysym = @enumFromInt(0x0eac);
    pub const Hangul_RieulSios: Keysym = @enumFromInt(0x0ead);
    pub const Hangul_RieulTieut: Keysym = @enumFromInt(0x0eae);
    pub const Hangul_RieulPhieuf: Keysym = @enumFromInt(0x0eaf);
    pub const Hangul_RieulHieuh: Keysym = @enumFromInt(0x0eb0);
    pub const Hangul_Mieum: Keysym = @enumFromInt(0x0eb1);
    pub const Hangul_Pieub: Keysym = @enumFromInt(0x0eb2);
    pub const Hangul_SsangPieub: Keysym = @enumFromInt(0x0eb3);
    pub const Hangul_PieubSios: Keysym = @enumFromInt(0x0eb4);
    pub const Hangul_Sios: Keysym = @enumFromInt(0x0eb5);
    pub const Hangul_SsangSios: Keysym = @enumFromInt(0x0eb6);
    pub const Hangul_Ieung: Keysym = @enumFromInt(0x0eb7);
    pub const Hangul_Jieuj: Keysym = @enumFromInt(0x0eb8);
    pub const Hangul_SsangJieuj: Keysym = @enumFromInt(0x0eb9);
    pub const Hangul_Cieuc: Keysym = @enumFromInt(0x0eba);
    pub const Hangul_Khieuq: Keysym = @enumFromInt(0x0ebb);
    pub const Hangul_Tieut: Keysym = @enumFromInt(0x0ebc);
    pub const Hangul_Phieuf: Keysym = @enumFromInt(0x0ebd);
    pub const Hangul_Hieuh: Keysym = @enumFromInt(0x0ebe);
    pub const Hangul_A: Keysym = @enumFromInt(0x0ebf);
    pub const Hangul_AE: Keysym = @enumFromInt(0x0ec0);
    pub const Hangul_YA: Keysym = @enumFromInt(0x0ec1);
    pub const Hangul_YAE: Keysym = @enumFromInt(0x0ec2);
    pub const Hangul_EO: Keysym = @enumFromInt(0x0ec3);
    pub const Hangul_E: Keysym = @enumFromInt(0x0ec4);
    pub const Hangul_YEO: Keysym = @enumFromInt(0x0ec5);
    pub const Hangul_YE: Keysym = @enumFromInt(0x0ec6);
    pub const Hangul_O: Keysym = @enumFromInt(0x0ec7);
    pub const Hangul_WA: Keysym = @enumFromInt(0x0ec8);
    pub const Hangul_WAE: Keysym = @enumFromInt(0x0ec9);
    pub const Hangul_OE: Keysym = @enumFromInt(0x0eca);
    pub const Hangul_YO: Keysym = @enumFromInt(0x0ecb);
    pub const Hangul_U: Keysym = @enumFromInt(0x0ecc);
    pub const Hangul_WEO: Keysym = @enumFromInt(0x0ecd);
    pub const Hangul_WE: Keysym = @enumFromInt(0x0ece);
    pub const Hangul_WI: Keysym = @enumFromInt(0x0ecf);
    pub const Hangul_YU: Keysym = @enumFromInt(0x0ed0);
    pub const Hangul_EU: Keysym = @enumFromInt(0x0ed1);
    pub const Hangul_YI: Keysym = @enumFromInt(0x0ed2);
    pub const Hangul_I: Keysym = @enumFromInt(0x0ed3);
    pub const Hangul_J_Kiyeog: Keysym = @enumFromInt(0x0ed4);
    pub const Hangul_J_SsangKiyeog: Keysym = @enumFromInt(0x0ed5);
    pub const Hangul_J_KiyeogSios: Keysym = @enumFromInt(0x0ed6);
    pub const Hangul_J_Nieun: Keysym = @enumFromInt(0x0ed7);
    pub const Hangul_J_NieunJieuj: Keysym = @enumFromInt(0x0ed8);
    pub const Hangul_J_NieunHieuh: Keysym = @enumFromInt(0x0ed9);
    pub const Hangul_J_Dikeud: Keysym = @enumFromInt(0x0eda);
    pub const Hangul_J_Rieul: Keysym = @enumFromInt(0x0edb);
    pub const Hangul_J_RieulKiyeog: Keysym = @enumFromInt(0x0edc);
    pub const Hangul_J_RieulMieum: Keysym = @enumFromInt(0x0edd);
    pub const Hangul_J_RieulPieub: Keysym = @enumFromInt(0x0ede);
    pub const Hangul_J_RieulSios: Keysym = @enumFromInt(0x0edf);
    pub const Hangul_J_RieulTieut: Keysym = @enumFromInt(0x0ee0);
    pub const Hangul_J_RieulPhieuf: Keysym = @enumFromInt(0x0ee1);
    pub const Hangul_J_RieulHieuh: Keysym = @enumFromInt(0x0ee2);
    pub const Hangul_J_Mieum: Keysym = @enumFromInt(0x0ee3);
    pub const Hangul_J_Pieub: Keysym = @enumFromInt(0x0ee4);
    pub const Hangul_J_PieubSios: Keysym = @enumFromInt(0x0ee5);
    pub const Hangul_J_Sios: Keysym = @enumFromInt(0x0ee6);
    pub const Hangul_J_SsangSios: Keysym = @enumFromInt(0x0ee7);
    pub const Hangul_J_Ieung: Keysym = @enumFromInt(0x0ee8);
    pub const Hangul_J_Jieuj: Keysym = @enumFromInt(0x0ee9);
    pub const Hangul_J_Cieuc: Keysym = @enumFromInt(0x0eea);
    pub const Hangul_J_Khieuq: Keysym = @enumFromInt(0x0eeb);
    pub const Hangul_J_Tieut: Keysym = @enumFromInt(0x0eec);
    pub const Hangul_J_Phieuf: Keysym = @enumFromInt(0x0eed);
    pub const Hangul_J_Hieuh: Keysym = @enumFromInt(0x0eee);
    pub const Hangul_RieulYeorinHieuh: Keysym = @enumFromInt(0x0eef);
    pub const Hangul_SunkyeongeumMieum: Keysym = @enumFromInt(0x0ef0);
    pub const Hangul_SunkyeongeumPieub: Keysym = @enumFromInt(0x0ef1);
    pub const Hangul_PanSios: Keysym = @enumFromInt(0x0ef2);
    pub const Hangul_KkogjiDalrinIeung: Keysym = @enumFromInt(0x0ef3);
    pub const Hangul_SunkyeongeumPhieuf: Keysym = @enumFromInt(0x0ef4);
    pub const Hangul_YeorinHieuh: Keysym = @enumFromInt(0x0ef5);
    pub const Hangul_AraeA: Keysym = @enumFromInt(0x0ef6);
    pub const Hangul_AraeAE: Keysym = @enumFromInt(0x0ef7);
    pub const Hangul_J_PanSios: Keysym = @enumFromInt(0x0ef8);
    pub const Hangul_J_KkogjiDalrinIeung: Keysym = @enumFromInt(0x0ef9);
    pub const Hangul_J_YeorinHieuh: Keysym = @enumFromInt(0x0efa);
    pub const Korean_Won: Keysym = @enumFromInt(0x0eff);

    pub const Armenian_ligature_ew: Keysym = @enumFromInt(0x1000587);
    pub const Armenian_full_stop: Keysym = @enumFromInt(0x1000589);
    pub const Armenian_verjaket: Keysym = @enumFromInt(0x1000589);
    pub const Armenian_separation_mark: Keysym = @enumFromInt(0x100055d);
    pub const Armenian_but: Keysym = @enumFromInt(0x100055d);
    pub const Armenian_hyphen: Keysym = @enumFromInt(0x100058a);
    pub const Armenian_yentamna: Keysym = @enumFromInt(0x100058a);
    pub const Armenian_exclam: Keysym = @enumFromInt(0x100055c);
    pub const Armenian_amanak: Keysym = @enumFromInt(0x100055c);
    pub const Armenian_accent: Keysym = @enumFromInt(0x100055b);
    pub const Armenian_shesht: Keysym = @enumFromInt(0x100055b);
    pub const Armenian_question: Keysym = @enumFromInt(0x100055e);
    pub const Armenian_paruyk: Keysym = @enumFromInt(0x100055e);
    pub const Armenian_AYB: Keysym = @enumFromInt(0x1000531);
    pub const Armenian_ayb: Keysym = @enumFromInt(0x1000561);
    pub const Armenian_BEN: Keysym = @enumFromInt(0x1000532);
    pub const Armenian_ben: Keysym = @enumFromInt(0x1000562);
    pub const Armenian_GIM: Keysym = @enumFromInt(0x1000533);
    pub const Armenian_gim: Keysym = @enumFromInt(0x1000563);
    pub const Armenian_DA: Keysym = @enumFromInt(0x1000534);
    pub const Armenian_da: Keysym = @enumFromInt(0x1000564);
    pub const Armenian_YECH: Keysym = @enumFromInt(0x1000535);
    pub const Armenian_yech: Keysym = @enumFromInt(0x1000565);
    pub const Armenian_ZA: Keysym = @enumFromInt(0x1000536);
    pub const Armenian_za: Keysym = @enumFromInt(0x1000566);
    pub const Armenian_E: Keysym = @enumFromInt(0x1000537);
    pub const Armenian_e: Keysym = @enumFromInt(0x1000567);
    pub const Armenian_AT: Keysym = @enumFromInt(0x1000538);
    pub const Armenian_at: Keysym = @enumFromInt(0x1000568);
    pub const Armenian_TO: Keysym = @enumFromInt(0x1000539);
    pub const Armenian_to: Keysym = @enumFromInt(0x1000569);
    pub const Armenian_ZHE: Keysym = @enumFromInt(0x100053a);
    pub const Armenian_zhe: Keysym = @enumFromInt(0x100056a);
    pub const Armenian_INI: Keysym = @enumFromInt(0x100053b);
    pub const Armenian_ini: Keysym = @enumFromInt(0x100056b);
    pub const Armenian_LYUN: Keysym = @enumFromInt(0x100053c);
    pub const Armenian_lyun: Keysym = @enumFromInt(0x100056c);
    pub const Armenian_KHE: Keysym = @enumFromInt(0x100053d);
    pub const Armenian_khe: Keysym = @enumFromInt(0x100056d);
    pub const Armenian_TSA: Keysym = @enumFromInt(0x100053e);
    pub const Armenian_tsa: Keysym = @enumFromInt(0x100056e);
    pub const Armenian_KEN: Keysym = @enumFromInt(0x100053f);
    pub const Armenian_ken: Keysym = @enumFromInt(0x100056f);
    pub const Armenian_HO: Keysym = @enumFromInt(0x1000540);
    pub const Armenian_ho: Keysym = @enumFromInt(0x1000570);
    pub const Armenian_DZA: Keysym = @enumFromInt(0x1000541);
    pub const Armenian_dza: Keysym = @enumFromInt(0x1000571);
    pub const Armenian_GHAT: Keysym = @enumFromInt(0x1000542);
    pub const Armenian_ghat: Keysym = @enumFromInt(0x1000572);
    pub const Armenian_TCHE: Keysym = @enumFromInt(0x1000543);
    pub const Armenian_tche: Keysym = @enumFromInt(0x1000573);
    pub const Armenian_MEN: Keysym = @enumFromInt(0x1000544);
    pub const Armenian_men: Keysym = @enumFromInt(0x1000574);
    pub const Armenian_HI: Keysym = @enumFromInt(0x1000545);
    pub const Armenian_hi: Keysym = @enumFromInt(0x1000575);
    pub const Armenian_NU: Keysym = @enumFromInt(0x1000546);
    pub const Armenian_nu: Keysym = @enumFromInt(0x1000576);
    pub const Armenian_SHA: Keysym = @enumFromInt(0x1000547);
    pub const Armenian_sha: Keysym = @enumFromInt(0x1000577);
    pub const Armenian_VO: Keysym = @enumFromInt(0x1000548);
    pub const Armenian_vo: Keysym = @enumFromInt(0x1000578);
    pub const Armenian_CHA: Keysym = @enumFromInt(0x1000549);
    pub const Armenian_cha: Keysym = @enumFromInt(0x1000579);
    pub const Armenian_PE: Keysym = @enumFromInt(0x100054a);
    pub const Armenian_pe: Keysym = @enumFromInt(0x100057a);
    pub const Armenian_JE: Keysym = @enumFromInt(0x100054b);
    pub const Armenian_je: Keysym = @enumFromInt(0x100057b);
    pub const Armenian_RA: Keysym = @enumFromInt(0x100054c);
    pub const Armenian_ra: Keysym = @enumFromInt(0x100057c);
    pub const Armenian_SE: Keysym = @enumFromInt(0x100054d);
    pub const Armenian_se: Keysym = @enumFromInt(0x100057d);
    pub const Armenian_VEV: Keysym = @enumFromInt(0x100054e);
    pub const Armenian_vev: Keysym = @enumFromInt(0x100057e);
    pub const Armenian_TYUN: Keysym = @enumFromInt(0x100054f);
    pub const Armenian_tyun: Keysym = @enumFromInt(0x100057f);
    pub const Armenian_RE: Keysym = @enumFromInt(0x1000550);
    pub const Armenian_re: Keysym = @enumFromInt(0x1000580);
    pub const Armenian_TSO: Keysym = @enumFromInt(0x1000551);
    pub const Armenian_tso: Keysym = @enumFromInt(0x1000581);
    pub const Armenian_VYUN: Keysym = @enumFromInt(0x1000552);
    pub const Armenian_vyun: Keysym = @enumFromInt(0x1000582);
    pub const Armenian_PYUR: Keysym = @enumFromInt(0x1000553);
    pub const Armenian_pyur: Keysym = @enumFromInt(0x1000583);
    pub const Armenian_KE: Keysym = @enumFromInt(0x1000554);
    pub const Armenian_ke: Keysym = @enumFromInt(0x1000584);
    pub const Armenian_O: Keysym = @enumFromInt(0x1000555);
    pub const Armenian_o: Keysym = @enumFromInt(0x1000585);
    pub const Armenian_FE: Keysym = @enumFromInt(0x1000556);
    pub const Armenian_fe: Keysym = @enumFromInt(0x1000586);
    pub const Armenian_apostrophe: Keysym = @enumFromInt(0x100055a);

    pub const Georgian_an: Keysym = @enumFromInt(0x10010d0);
    pub const Georgian_ban: Keysym = @enumFromInt(0x10010d1);
    pub const Georgian_gan: Keysym = @enumFromInt(0x10010d2);
    pub const Georgian_don: Keysym = @enumFromInt(0x10010d3);
    pub const Georgian_en: Keysym = @enumFromInt(0x10010d4);
    pub const Georgian_vin: Keysym = @enumFromInt(0x10010d5);
    pub const Georgian_zen: Keysym = @enumFromInt(0x10010d6);
    pub const Georgian_tan: Keysym = @enumFromInt(0x10010d7);
    pub const Georgian_in: Keysym = @enumFromInt(0x10010d8);
    pub const Georgian_kan: Keysym = @enumFromInt(0x10010d9);
    pub const Georgian_las: Keysym = @enumFromInt(0x10010da);
    pub const Georgian_man: Keysym = @enumFromInt(0x10010db);
    pub const Georgian_nar: Keysym = @enumFromInt(0x10010dc);
    pub const Georgian_on: Keysym = @enumFromInt(0x10010dd);
    pub const Georgian_par: Keysym = @enumFromInt(0x10010de);
    pub const Georgian_zhar: Keysym = @enumFromInt(0x10010df);
    pub const Georgian_rae: Keysym = @enumFromInt(0x10010e0);
    pub const Georgian_san: Keysym = @enumFromInt(0x10010e1);
    pub const Georgian_tar: Keysym = @enumFromInt(0x10010e2);
    pub const Georgian_un: Keysym = @enumFromInt(0x10010e3);
    pub const Georgian_phar: Keysym = @enumFromInt(0x10010e4);
    pub const Georgian_khar: Keysym = @enumFromInt(0x10010e5);
    pub const Georgian_ghan: Keysym = @enumFromInt(0x10010e6);
    pub const Georgian_qar: Keysym = @enumFromInt(0x10010e7);
    pub const Georgian_shin: Keysym = @enumFromInt(0x10010e8);
    pub const Georgian_chin: Keysym = @enumFromInt(0x10010e9);
    pub const Georgian_can: Keysym = @enumFromInt(0x10010ea);
    pub const Georgian_jil: Keysym = @enumFromInt(0x10010eb);
    pub const Georgian_cil: Keysym = @enumFromInt(0x10010ec);
    pub const Georgian_char: Keysym = @enumFromInt(0x10010ed);
    pub const Georgian_xan: Keysym = @enumFromInt(0x10010ee);
    pub const Georgian_jhan: Keysym = @enumFromInt(0x10010ef);
    pub const Georgian_hae: Keysym = @enumFromInt(0x10010f0);
    pub const Georgian_he: Keysym = @enumFromInt(0x10010f1);
    pub const Georgian_hie: Keysym = @enumFromInt(0x10010f2);
    pub const Georgian_we: Keysym = @enumFromInt(0x10010f3);
    pub const Georgian_har: Keysym = @enumFromInt(0x10010f4);
    pub const Georgian_hoe: Keysym = @enumFromInt(0x10010f5);
    pub const Georgian_fi: Keysym = @enumFromInt(0x10010f6);

    pub const Xabovedot: Keysym = @enumFromInt(0x1001e8a);
    pub const Ibreve: Keysym = @enumFromInt(0x100012c);
    pub const Zstroke: Keysym = @enumFromInt(0x10001b5);
    pub const Gcaron: Keysym = @enumFromInt(0x10001e6);
    pub const Ocaron: Keysym = @enumFromInt(0x10001d1);
    pub const Obarred: Keysym = @enumFromInt(0x100019f);
    pub const xabovedot: Keysym = @enumFromInt(0x1001e8b);
    pub const ibreve: Keysym = @enumFromInt(0x100012d);
    pub const zstroke: Keysym = @enumFromInt(0x10001b6);
    pub const gcaron: Keysym = @enumFromInt(0x10001e7);
    pub const ocaron: Keysym = @enumFromInt(0x10001d2);
    pub const obarred: Keysym = @enumFromInt(0x1000275);
    pub const SCHWA: Keysym = @enumFromInt(0x100018f);
    pub const schwa: Keysym = @enumFromInt(0x1000259);
    pub const EZH: Keysym = @enumFromInt(0x10001b7);
    pub const ezh: Keysym = @enumFromInt(0x1000292);
    pub const Lbelowdot: Keysym = @enumFromInt(0x1001e36);
    pub const lbelowdot: Keysym = @enumFromInt(0x1001e37);

    pub const Abelowdot: Keysym = @enumFromInt(0x1001ea0);
    pub const abelowdot: Keysym = @enumFromInt(0x1001ea1);
    pub const Ahook: Keysym = @enumFromInt(0x1001ea2);
    pub const ahook: Keysym = @enumFromInt(0x1001ea3);
    pub const Acircumflexacute: Keysym = @enumFromInt(0x1001ea4);
    pub const acircumflexacute: Keysym = @enumFromInt(0x1001ea5);
    pub const Acircumflexgrave: Keysym = @enumFromInt(0x1001ea6);
    pub const acircumflexgrave: Keysym = @enumFromInt(0x1001ea7);
    pub const Acircumflexhook: Keysym = @enumFromInt(0x1001ea8);
    pub const acircumflexhook: Keysym = @enumFromInt(0x1001ea9);
    pub const Acircumflextilde: Keysym = @enumFromInt(0x1001eaa);
    pub const acircumflextilde: Keysym = @enumFromInt(0x1001eab);
    pub const Acircumflexbelowdot: Keysym = @enumFromInt(0x1001eac);
    pub const acircumflexbelowdot: Keysym = @enumFromInt(0x1001ead);
    pub const Abreveacute: Keysym = @enumFromInt(0x1001eae);
    pub const abreveacute: Keysym = @enumFromInt(0x1001eaf);
    pub const Abrevegrave: Keysym = @enumFromInt(0x1001eb0);
    pub const abrevegrave: Keysym = @enumFromInt(0x1001eb1);
    pub const Abrevehook: Keysym = @enumFromInt(0x1001eb2);
    pub const abrevehook: Keysym = @enumFromInt(0x1001eb3);
    pub const Abrevetilde: Keysym = @enumFromInt(0x1001eb4);
    pub const abrevetilde: Keysym = @enumFromInt(0x1001eb5);
    pub const Abrevebelowdot: Keysym = @enumFromInt(0x1001eb6);
    pub const abrevebelowdot: Keysym = @enumFromInt(0x1001eb7);
    pub const Ebelowdot: Keysym = @enumFromInt(0x1001eb8);
    pub const ebelowdot: Keysym = @enumFromInt(0x1001eb9);
    pub const Ehook: Keysym = @enumFromInt(0x1001eba);
    pub const ehook: Keysym = @enumFromInt(0x1001ebb);
    pub const Etilde: Keysym = @enumFromInt(0x1001ebc);
    pub const etilde: Keysym = @enumFromInt(0x1001ebd);
    pub const Ecircumflexacute: Keysym = @enumFromInt(0x1001ebe);
    pub const ecircumflexacute: Keysym = @enumFromInt(0x1001ebf);
    pub const Ecircumflexgrave: Keysym = @enumFromInt(0x1001ec0);
    pub const ecircumflexgrave: Keysym = @enumFromInt(0x1001ec1);
    pub const Ecircumflexhook: Keysym = @enumFromInt(0x1001ec2);
    pub const ecircumflexhook: Keysym = @enumFromInt(0x1001ec3);
    pub const Ecircumflextilde: Keysym = @enumFromInt(0x1001ec4);
    pub const ecircumflextilde: Keysym = @enumFromInt(0x1001ec5);
    pub const Ecircumflexbelowdot: Keysym = @enumFromInt(0x1001ec6);
    pub const ecircumflexbelowdot: Keysym = @enumFromInt(0x1001ec7);
    pub const Ihook: Keysym = @enumFromInt(0x1001ec8);
    pub const ihook: Keysym = @enumFromInt(0x1001ec9);
    pub const Ibelowdot: Keysym = @enumFromInt(0x1001eca);
    pub const ibelowdot: Keysym = @enumFromInt(0x1001ecb);
    pub const Obelowdot: Keysym = @enumFromInt(0x1001ecc);
    pub const obelowdot: Keysym = @enumFromInt(0x1001ecd);
    pub const Ohook: Keysym = @enumFromInt(0x1001ece);
    pub const ohook: Keysym = @enumFromInt(0x1001ecf);
    pub const Ocircumflexacute: Keysym = @enumFromInt(0x1001ed0);
    pub const ocircumflexacute: Keysym = @enumFromInt(0x1001ed1);
    pub const Ocircumflexgrave: Keysym = @enumFromInt(0x1001ed2);
    pub const ocircumflexgrave: Keysym = @enumFromInt(0x1001ed3);
    pub const Ocircumflexhook: Keysym = @enumFromInt(0x1001ed4);
    pub const ocircumflexhook: Keysym = @enumFromInt(0x1001ed5);
    pub const Ocircumflextilde: Keysym = @enumFromInt(0x1001ed6);
    pub const ocircumflextilde: Keysym = @enumFromInt(0x1001ed7);
    pub const Ocircumflexbelowdot: Keysym = @enumFromInt(0x1001ed8);
    pub const ocircumflexbelowdot: Keysym = @enumFromInt(0x1001ed9);
    pub const Ohornacute: Keysym = @enumFromInt(0x1001eda);
    pub const ohornacute: Keysym = @enumFromInt(0x1001edb);
    pub const Ohorngrave: Keysym = @enumFromInt(0x1001edc);
    pub const ohorngrave: Keysym = @enumFromInt(0x1001edd);
    pub const Ohornhook: Keysym = @enumFromInt(0x1001ede);
    pub const ohornhook: Keysym = @enumFromInt(0x1001edf);
    pub const Ohorntilde: Keysym = @enumFromInt(0x1001ee0);
    pub const ohorntilde: Keysym = @enumFromInt(0x1001ee1);
    pub const Ohornbelowdot: Keysym = @enumFromInt(0x1001ee2);
    pub const ohornbelowdot: Keysym = @enumFromInt(0x1001ee3);
    pub const Ubelowdot: Keysym = @enumFromInt(0x1001ee4);
    pub const ubelowdot: Keysym = @enumFromInt(0x1001ee5);
    pub const Uhook: Keysym = @enumFromInt(0x1001ee6);
    pub const uhook: Keysym = @enumFromInt(0x1001ee7);
    pub const Uhornacute: Keysym = @enumFromInt(0x1001ee8);
    pub const uhornacute: Keysym = @enumFromInt(0x1001ee9);
    pub const Uhorngrave: Keysym = @enumFromInt(0x1001eea);
    pub const uhorngrave: Keysym = @enumFromInt(0x1001eeb);
    pub const Uhornhook: Keysym = @enumFromInt(0x1001eec);
    pub const uhornhook: Keysym = @enumFromInt(0x1001eed);
    pub const Uhorntilde: Keysym = @enumFromInt(0x1001eee);
    pub const uhorntilde: Keysym = @enumFromInt(0x1001eef);
    pub const Uhornbelowdot: Keysym = @enumFromInt(0x1001ef0);
    pub const uhornbelowdot: Keysym = @enumFromInt(0x1001ef1);
    pub const Ybelowdot: Keysym = @enumFromInt(0x1001ef4);
    pub const ybelowdot: Keysym = @enumFromInt(0x1001ef5);
    pub const Yhook: Keysym = @enumFromInt(0x1001ef6);
    pub const yhook: Keysym = @enumFromInt(0x1001ef7);
    pub const Ytilde: Keysym = @enumFromInt(0x1001ef8);
    pub const ytilde: Keysym = @enumFromInt(0x1001ef9);
    pub const Ohorn: Keysym = @enumFromInt(0x10001a0);
    pub const ohorn: Keysym = @enumFromInt(0x10001a1);
    pub const Uhorn: Keysym = @enumFromInt(0x10001af);
    pub const uhorn: Keysym = @enumFromInt(0x10001b0);

    pub const EcuSign: Keysym = @enumFromInt(0x10020a0);
    pub const ColonSign: Keysym = @enumFromInt(0x10020a1);
    pub const CruzeiroSign: Keysym = @enumFromInt(0x10020a2);
    pub const FFrancSign: Keysym = @enumFromInt(0x10020a3);
    pub const LiraSign: Keysym = @enumFromInt(0x10020a4);
    pub const MillSign: Keysym = @enumFromInt(0x10020a5);
    pub const NairaSign: Keysym = @enumFromInt(0x10020a6);
    pub const PesetaSign: Keysym = @enumFromInt(0x10020a7);
    pub const RupeeSign: Keysym = @enumFromInt(0x10020a8);
    pub const WonSign: Keysym = @enumFromInt(0x10020a9);
    pub const NewSheqelSign: Keysym = @enumFromInt(0x10020aa);
    pub const DongSign: Keysym = @enumFromInt(0x10020ab);
    pub const EuroSign: Keysym = @enumFromInt(0x20ac);

    pub const zerosuperior: Keysym = @enumFromInt(0x1002070);
    pub const foursuperior: Keysym = @enumFromInt(0x1002074);
    pub const fivesuperior: Keysym = @enumFromInt(0x1002075);
    pub const sixsuperior: Keysym = @enumFromInt(0x1002076);
    pub const sevensuperior: Keysym = @enumFromInt(0x1002077);
    pub const eightsuperior: Keysym = @enumFromInt(0x1002078);
    pub const ninesuperior: Keysym = @enumFromInt(0x1002079);
    pub const zerosubscript: Keysym = @enumFromInt(0x1002080);
    pub const onesubscript: Keysym = @enumFromInt(0x1002081);
    pub const twosubscript: Keysym = @enumFromInt(0x1002082);
    pub const threesubscript: Keysym = @enumFromInt(0x1002083);
    pub const foursubscript: Keysym = @enumFromInt(0x1002084);
    pub const fivesubscript: Keysym = @enumFromInt(0x1002085);
    pub const sixsubscript: Keysym = @enumFromInt(0x1002086);
    pub const sevensubscript: Keysym = @enumFromInt(0x1002087);
    pub const eightsubscript: Keysym = @enumFromInt(0x1002088);
    pub const ninesubscript: Keysym = @enumFromInt(0x1002089);
    pub const partdifferential: Keysym = @enumFromInt(0x1002202);
    pub const emptyset: Keysym = @enumFromInt(0x1002205);
    pub const elementof: Keysym = @enumFromInt(0x1002208);
    pub const notelementof: Keysym = @enumFromInt(0x1002209);
    pub const containsas: Keysym = @enumFromInt(0x100220B);
    pub const squareroot: Keysym = @enumFromInt(0x100221A);
    pub const cuberoot: Keysym = @enumFromInt(0x100221B);
    pub const fourthroot: Keysym = @enumFromInt(0x100221C);
    pub const dintegral: Keysym = @enumFromInt(0x100222C);
    pub const tintegral: Keysym = @enumFromInt(0x100222D);
    pub const because: Keysym = @enumFromInt(0x1002235);
    pub const approxeq: Keysym = @enumFromInt(0x1002248);
    pub const notapproxeq: Keysym = @enumFromInt(0x1002247);
    pub const notidentical: Keysym = @enumFromInt(0x1002262);
    pub const stricteq: Keysym = @enumFromInt(0x1002263);

    pub const braille_dot_1: Keysym = @enumFromInt(0xfff1);
    pub const braille_dot_2: Keysym = @enumFromInt(0xfff2);
    pub const braille_dot_3: Keysym = @enumFromInt(0xfff3);
    pub const braille_dot_4: Keysym = @enumFromInt(0xfff4);
    pub const braille_dot_5: Keysym = @enumFromInt(0xfff5);
    pub const braille_dot_6: Keysym = @enumFromInt(0xfff6);
    pub const braille_dot_7: Keysym = @enumFromInt(0xfff7);
    pub const braille_dot_8: Keysym = @enumFromInt(0xfff8);
    pub const braille_dot_9: Keysym = @enumFromInt(0xfff9);
    pub const braille_dot_10: Keysym = @enumFromInt(0xfffa);
    pub const braille_blank: Keysym = @enumFromInt(0x1002800);
    pub const braille_dots_1: Keysym = @enumFromInt(0x1002801);
    pub const braille_dots_2: Keysym = @enumFromInt(0x1002802);
    pub const braille_dots_12: Keysym = @enumFromInt(0x1002803);
    pub const braille_dots_3: Keysym = @enumFromInt(0x1002804);
    pub const braille_dots_13: Keysym = @enumFromInt(0x1002805);
    pub const braille_dots_23: Keysym = @enumFromInt(0x1002806);
    pub const braille_dots_123: Keysym = @enumFromInt(0x1002807);
    pub const braille_dots_4: Keysym = @enumFromInt(0x1002808);
    pub const braille_dots_14: Keysym = @enumFromInt(0x1002809);
    pub const braille_dots_24: Keysym = @enumFromInt(0x100280a);
    pub const braille_dots_124: Keysym = @enumFromInt(0x100280b);
    pub const braille_dots_34: Keysym = @enumFromInt(0x100280c);
    pub const braille_dots_134: Keysym = @enumFromInt(0x100280d);
    pub const braille_dots_234: Keysym = @enumFromInt(0x100280e);
    pub const braille_dots_1234: Keysym = @enumFromInt(0x100280f);
    pub const braille_dots_5: Keysym = @enumFromInt(0x1002810);
    pub const braille_dots_15: Keysym = @enumFromInt(0x1002811);
    pub const braille_dots_25: Keysym = @enumFromInt(0x1002812);
    pub const braille_dots_125: Keysym = @enumFromInt(0x1002813);
    pub const braille_dots_35: Keysym = @enumFromInt(0x1002814);
    pub const braille_dots_135: Keysym = @enumFromInt(0x1002815);
    pub const braille_dots_235: Keysym = @enumFromInt(0x1002816);
    pub const braille_dots_1235: Keysym = @enumFromInt(0x1002817);
    pub const braille_dots_45: Keysym = @enumFromInt(0x1002818);
    pub const braille_dots_145: Keysym = @enumFromInt(0x1002819);
    pub const braille_dots_245: Keysym = @enumFromInt(0x100281a);
    pub const braille_dots_1245: Keysym = @enumFromInt(0x100281b);
    pub const braille_dots_345: Keysym = @enumFromInt(0x100281c);
    pub const braille_dots_1345: Keysym = @enumFromInt(0x100281d);
    pub const braille_dots_2345: Keysym = @enumFromInt(0x100281e);
    pub const braille_dots_12345: Keysym = @enumFromInt(0x100281f);
    pub const braille_dots_6: Keysym = @enumFromInt(0x1002820);
    pub const braille_dots_16: Keysym = @enumFromInt(0x1002821);
    pub const braille_dots_26: Keysym = @enumFromInt(0x1002822);
    pub const braille_dots_126: Keysym = @enumFromInt(0x1002823);
    pub const braille_dots_36: Keysym = @enumFromInt(0x1002824);
    pub const braille_dots_136: Keysym = @enumFromInt(0x1002825);
    pub const braille_dots_236: Keysym = @enumFromInt(0x1002826);
    pub const braille_dots_1236: Keysym = @enumFromInt(0x1002827);
    pub const braille_dots_46: Keysym = @enumFromInt(0x1002828);
    pub const braille_dots_146: Keysym = @enumFromInt(0x1002829);
    pub const braille_dots_246: Keysym = @enumFromInt(0x100282a);
    pub const braille_dots_1246: Keysym = @enumFromInt(0x100282b);
    pub const braille_dots_346: Keysym = @enumFromInt(0x100282c);
    pub const braille_dots_1346: Keysym = @enumFromInt(0x100282d);
    pub const braille_dots_2346: Keysym = @enumFromInt(0x100282e);
    pub const braille_dots_12346: Keysym = @enumFromInt(0x100282f);
    pub const braille_dots_56: Keysym = @enumFromInt(0x1002830);
    pub const braille_dots_156: Keysym = @enumFromInt(0x1002831);
    pub const braille_dots_256: Keysym = @enumFromInt(0x1002832);
    pub const braille_dots_1256: Keysym = @enumFromInt(0x1002833);
    pub const braille_dots_356: Keysym = @enumFromInt(0x1002834);
    pub const braille_dots_1356: Keysym = @enumFromInt(0x1002835);
    pub const braille_dots_2356: Keysym = @enumFromInt(0x1002836);
    pub const braille_dots_12356: Keysym = @enumFromInt(0x1002837);
    pub const braille_dots_456: Keysym = @enumFromInt(0x1002838);
    pub const braille_dots_1456: Keysym = @enumFromInt(0x1002839);
    pub const braille_dots_2456: Keysym = @enumFromInt(0x100283a);
    pub const braille_dots_12456: Keysym = @enumFromInt(0x100283b);
    pub const braille_dots_3456: Keysym = @enumFromInt(0x100283c);
    pub const braille_dots_13456: Keysym = @enumFromInt(0x100283d);
    pub const braille_dots_23456: Keysym = @enumFromInt(0x100283e);
    pub const braille_dots_123456: Keysym = @enumFromInt(0x100283f);
    pub const braille_dots_7: Keysym = @enumFromInt(0x1002840);
    pub const braille_dots_17: Keysym = @enumFromInt(0x1002841);
    pub const braille_dots_27: Keysym = @enumFromInt(0x1002842);
    pub const braille_dots_127: Keysym = @enumFromInt(0x1002843);
    pub const braille_dots_37: Keysym = @enumFromInt(0x1002844);
    pub const braille_dots_137: Keysym = @enumFromInt(0x1002845);
    pub const braille_dots_237: Keysym = @enumFromInt(0x1002846);
    pub const braille_dots_1237: Keysym = @enumFromInt(0x1002847);
    pub const braille_dots_47: Keysym = @enumFromInt(0x1002848);
    pub const braille_dots_147: Keysym = @enumFromInt(0x1002849);
    pub const braille_dots_247: Keysym = @enumFromInt(0x100284a);
    pub const braille_dots_1247: Keysym = @enumFromInt(0x100284b);
    pub const braille_dots_347: Keysym = @enumFromInt(0x100284c);
    pub const braille_dots_1347: Keysym = @enumFromInt(0x100284d);
    pub const braille_dots_2347: Keysym = @enumFromInt(0x100284e);
    pub const braille_dots_12347: Keysym = @enumFromInt(0x100284f);
    pub const braille_dots_57: Keysym = @enumFromInt(0x1002850);
    pub const braille_dots_157: Keysym = @enumFromInt(0x1002851);
    pub const braille_dots_257: Keysym = @enumFromInt(0x1002852);
    pub const braille_dots_1257: Keysym = @enumFromInt(0x1002853);
    pub const braille_dots_357: Keysym = @enumFromInt(0x1002854);
    pub const braille_dots_1357: Keysym = @enumFromInt(0x1002855);
    pub const braille_dots_2357: Keysym = @enumFromInt(0x1002856);
    pub const braille_dots_12357: Keysym = @enumFromInt(0x1002857);
    pub const braille_dots_457: Keysym = @enumFromInt(0x1002858);
    pub const braille_dots_1457: Keysym = @enumFromInt(0x1002859);
    pub const braille_dots_2457: Keysym = @enumFromInt(0x100285a);
    pub const braille_dots_12457: Keysym = @enumFromInt(0x100285b);
    pub const braille_dots_3457: Keysym = @enumFromInt(0x100285c);
    pub const braille_dots_13457: Keysym = @enumFromInt(0x100285d);
    pub const braille_dots_23457: Keysym = @enumFromInt(0x100285e);
    pub const braille_dots_123457: Keysym = @enumFromInt(0x100285f);
    pub const braille_dots_67: Keysym = @enumFromInt(0x1002860);
    pub const braille_dots_167: Keysym = @enumFromInt(0x1002861);
    pub const braille_dots_267: Keysym = @enumFromInt(0x1002862);
    pub const braille_dots_1267: Keysym = @enumFromInt(0x1002863);
    pub const braille_dots_367: Keysym = @enumFromInt(0x1002864);
    pub const braille_dots_1367: Keysym = @enumFromInt(0x1002865);
    pub const braille_dots_2367: Keysym = @enumFromInt(0x1002866);
    pub const braille_dots_12367: Keysym = @enumFromInt(0x1002867);
    pub const braille_dots_467: Keysym = @enumFromInt(0x1002868);
    pub const braille_dots_1467: Keysym = @enumFromInt(0x1002869);
    pub const braille_dots_2467: Keysym = @enumFromInt(0x100286a);
    pub const braille_dots_12467: Keysym = @enumFromInt(0x100286b);
    pub const braille_dots_3467: Keysym = @enumFromInt(0x100286c);
    pub const braille_dots_13467: Keysym = @enumFromInt(0x100286d);
    pub const braille_dots_23467: Keysym = @enumFromInt(0x100286e);
    pub const braille_dots_123467: Keysym = @enumFromInt(0x100286f);
    pub const braille_dots_567: Keysym = @enumFromInt(0x1002870);
    pub const braille_dots_1567: Keysym = @enumFromInt(0x1002871);
    pub const braille_dots_2567: Keysym = @enumFromInt(0x1002872);
    pub const braille_dots_12567: Keysym = @enumFromInt(0x1002873);
    pub const braille_dots_3567: Keysym = @enumFromInt(0x1002874);
    pub const braille_dots_13567: Keysym = @enumFromInt(0x1002875);
    pub const braille_dots_23567: Keysym = @enumFromInt(0x1002876);
    pub const braille_dots_123567: Keysym = @enumFromInt(0x1002877);
    pub const braille_dots_4567: Keysym = @enumFromInt(0x1002878);
    pub const braille_dots_14567: Keysym = @enumFromInt(0x1002879);
    pub const braille_dots_24567: Keysym = @enumFromInt(0x100287a);
    pub const braille_dots_124567: Keysym = @enumFromInt(0x100287b);
    pub const braille_dots_34567: Keysym = @enumFromInt(0x100287c);
    pub const braille_dots_134567: Keysym = @enumFromInt(0x100287d);
    pub const braille_dots_234567: Keysym = @enumFromInt(0x100287e);
    pub const braille_dots_1234567: Keysym = @enumFromInt(0x100287f);
    pub const braille_dots_8: Keysym = @enumFromInt(0x1002880);
    pub const braille_dots_18: Keysym = @enumFromInt(0x1002881);
    pub const braille_dots_28: Keysym = @enumFromInt(0x1002882);
    pub const braille_dots_128: Keysym = @enumFromInt(0x1002883);
    pub const braille_dots_38: Keysym = @enumFromInt(0x1002884);
    pub const braille_dots_138: Keysym = @enumFromInt(0x1002885);
    pub const braille_dots_238: Keysym = @enumFromInt(0x1002886);
    pub const braille_dots_1238: Keysym = @enumFromInt(0x1002887);
    pub const braille_dots_48: Keysym = @enumFromInt(0x1002888);
    pub const braille_dots_148: Keysym = @enumFromInt(0x1002889);
    pub const braille_dots_248: Keysym = @enumFromInt(0x100288a);
    pub const braille_dots_1248: Keysym = @enumFromInt(0x100288b);
    pub const braille_dots_348: Keysym = @enumFromInt(0x100288c);
    pub const braille_dots_1348: Keysym = @enumFromInt(0x100288d);
    pub const braille_dots_2348: Keysym = @enumFromInt(0x100288e);
    pub const braille_dots_12348: Keysym = @enumFromInt(0x100288f);
    pub const braille_dots_58: Keysym = @enumFromInt(0x1002890);
    pub const braille_dots_158: Keysym = @enumFromInt(0x1002891);
    pub const braille_dots_258: Keysym = @enumFromInt(0x1002892);
    pub const braille_dots_1258: Keysym = @enumFromInt(0x1002893);
    pub const braille_dots_358: Keysym = @enumFromInt(0x1002894);
    pub const braille_dots_1358: Keysym = @enumFromInt(0x1002895);
    pub const braille_dots_2358: Keysym = @enumFromInt(0x1002896);
    pub const braille_dots_12358: Keysym = @enumFromInt(0x1002897);
    pub const braille_dots_458: Keysym = @enumFromInt(0x1002898);
    pub const braille_dots_1458: Keysym = @enumFromInt(0x1002899);
    pub const braille_dots_2458: Keysym = @enumFromInt(0x100289a);
    pub const braille_dots_12458: Keysym = @enumFromInt(0x100289b);
    pub const braille_dots_3458: Keysym = @enumFromInt(0x100289c);
    pub const braille_dots_13458: Keysym = @enumFromInt(0x100289d);
    pub const braille_dots_23458: Keysym = @enumFromInt(0x100289e);
    pub const braille_dots_123458: Keysym = @enumFromInt(0x100289f);
    pub const braille_dots_68: Keysym = @enumFromInt(0x10028a0);
    pub const braille_dots_168: Keysym = @enumFromInt(0x10028a1);
    pub const braille_dots_268: Keysym = @enumFromInt(0x10028a2);
    pub const braille_dots_1268: Keysym = @enumFromInt(0x10028a3);
    pub const braille_dots_368: Keysym = @enumFromInt(0x10028a4);
    pub const braille_dots_1368: Keysym = @enumFromInt(0x10028a5);
    pub const braille_dots_2368: Keysym = @enumFromInt(0x10028a6);
    pub const braille_dots_12368: Keysym = @enumFromInt(0x10028a7);
    pub const braille_dots_468: Keysym = @enumFromInt(0x10028a8);
    pub const braille_dots_1468: Keysym = @enumFromInt(0x10028a9);
    pub const braille_dots_2468: Keysym = @enumFromInt(0x10028aa);
    pub const braille_dots_12468: Keysym = @enumFromInt(0x10028ab);
    pub const braille_dots_3468: Keysym = @enumFromInt(0x10028ac);
    pub const braille_dots_13468: Keysym = @enumFromInt(0x10028ad);
    pub const braille_dots_23468: Keysym = @enumFromInt(0x10028ae);
    pub const braille_dots_123468: Keysym = @enumFromInt(0x10028af);
    pub const braille_dots_568: Keysym = @enumFromInt(0x10028b0);
    pub const braille_dots_1568: Keysym = @enumFromInt(0x10028b1);
    pub const braille_dots_2568: Keysym = @enumFromInt(0x10028b2);
    pub const braille_dots_12568: Keysym = @enumFromInt(0x10028b3);
    pub const braille_dots_3568: Keysym = @enumFromInt(0x10028b4);
    pub const braille_dots_13568: Keysym = @enumFromInt(0x10028b5);
    pub const braille_dots_23568: Keysym = @enumFromInt(0x10028b6);
    pub const braille_dots_123568: Keysym = @enumFromInt(0x10028b7);
    pub const braille_dots_4568: Keysym = @enumFromInt(0x10028b8);
    pub const braille_dots_14568: Keysym = @enumFromInt(0x10028b9);
    pub const braille_dots_24568: Keysym = @enumFromInt(0x10028ba);
    pub const braille_dots_124568: Keysym = @enumFromInt(0x10028bb);
    pub const braille_dots_34568: Keysym = @enumFromInt(0x10028bc);
    pub const braille_dots_134568: Keysym = @enumFromInt(0x10028bd);
    pub const braille_dots_234568: Keysym = @enumFromInt(0x10028be);
    pub const braille_dots_1234568: Keysym = @enumFromInt(0x10028bf);
    pub const braille_dots_78: Keysym = @enumFromInt(0x10028c0);
    pub const braille_dots_178: Keysym = @enumFromInt(0x10028c1);
    pub const braille_dots_278: Keysym = @enumFromInt(0x10028c2);
    pub const braille_dots_1278: Keysym = @enumFromInt(0x10028c3);
    pub const braille_dots_378: Keysym = @enumFromInt(0x10028c4);
    pub const braille_dots_1378: Keysym = @enumFromInt(0x10028c5);
    pub const braille_dots_2378: Keysym = @enumFromInt(0x10028c6);
    pub const braille_dots_12378: Keysym = @enumFromInt(0x10028c7);
    pub const braille_dots_478: Keysym = @enumFromInt(0x10028c8);
    pub const braille_dots_1478: Keysym = @enumFromInt(0x10028c9);
    pub const braille_dots_2478: Keysym = @enumFromInt(0x10028ca);
    pub const braille_dots_12478: Keysym = @enumFromInt(0x10028cb);
    pub const braille_dots_3478: Keysym = @enumFromInt(0x10028cc);
    pub const braille_dots_13478: Keysym = @enumFromInt(0x10028cd);
    pub const braille_dots_23478: Keysym = @enumFromInt(0x10028ce);
    pub const braille_dots_123478: Keysym = @enumFromInt(0x10028cf);
    pub const braille_dots_578: Keysym = @enumFromInt(0x10028d0);
    pub const braille_dots_1578: Keysym = @enumFromInt(0x10028d1);
    pub const braille_dots_2578: Keysym = @enumFromInt(0x10028d2);
    pub const braille_dots_12578: Keysym = @enumFromInt(0x10028d3);
    pub const braille_dots_3578: Keysym = @enumFromInt(0x10028d4);
    pub const braille_dots_13578: Keysym = @enumFromInt(0x10028d5);
    pub const braille_dots_23578: Keysym = @enumFromInt(0x10028d6);
    pub const braille_dots_123578: Keysym = @enumFromInt(0x10028d7);
    pub const braille_dots_4578: Keysym = @enumFromInt(0x10028d8);
    pub const braille_dots_14578: Keysym = @enumFromInt(0x10028d9);
    pub const braille_dots_24578: Keysym = @enumFromInt(0x10028da);
    pub const braille_dots_124578: Keysym = @enumFromInt(0x10028db);
    pub const braille_dots_34578: Keysym = @enumFromInt(0x10028dc);
    pub const braille_dots_134578: Keysym = @enumFromInt(0x10028dd);
    pub const braille_dots_234578: Keysym = @enumFromInt(0x10028de);
    pub const braille_dots_1234578: Keysym = @enumFromInt(0x10028df);
    pub const braille_dots_678: Keysym = @enumFromInt(0x10028e0);
    pub const braille_dots_1678: Keysym = @enumFromInt(0x10028e1);
    pub const braille_dots_2678: Keysym = @enumFromInt(0x10028e2);
    pub const braille_dots_12678: Keysym = @enumFromInt(0x10028e3);
    pub const braille_dots_3678: Keysym = @enumFromInt(0x10028e4);
    pub const braille_dots_13678: Keysym = @enumFromInt(0x10028e5);
    pub const braille_dots_23678: Keysym = @enumFromInt(0x10028e6);
    pub const braille_dots_123678: Keysym = @enumFromInt(0x10028e7);
    pub const braille_dots_4678: Keysym = @enumFromInt(0x10028e8);
    pub const braille_dots_14678: Keysym = @enumFromInt(0x10028e9);
    pub const braille_dots_24678: Keysym = @enumFromInt(0x10028ea);
    pub const braille_dots_124678: Keysym = @enumFromInt(0x10028eb);
    pub const braille_dots_34678: Keysym = @enumFromInt(0x10028ec);
    pub const braille_dots_134678: Keysym = @enumFromInt(0x10028ed);
    pub const braille_dots_234678: Keysym = @enumFromInt(0x10028ee);
    pub const braille_dots_1234678: Keysym = @enumFromInt(0x10028ef);
    pub const braille_dots_5678: Keysym = @enumFromInt(0x10028f0);
    pub const braille_dots_15678: Keysym = @enumFromInt(0x10028f1);
    pub const braille_dots_25678: Keysym = @enumFromInt(0x10028f2);
    pub const braille_dots_125678: Keysym = @enumFromInt(0x10028f3);
    pub const braille_dots_35678: Keysym = @enumFromInt(0x10028f4);
    pub const braille_dots_135678: Keysym = @enumFromInt(0x10028f5);
    pub const braille_dots_235678: Keysym = @enumFromInt(0x10028f6);
    pub const braille_dots_1235678: Keysym = @enumFromInt(0x10028f7);
    pub const braille_dots_45678: Keysym = @enumFromInt(0x10028f8);
    pub const braille_dots_145678: Keysym = @enumFromInt(0x10028f9);
    pub const braille_dots_245678: Keysym = @enumFromInt(0x10028fa);
    pub const braille_dots_1245678: Keysym = @enumFromInt(0x10028fb);
    pub const braille_dots_345678: Keysym = @enumFromInt(0x10028fc);
    pub const braille_dots_1345678: Keysym = @enumFromInt(0x10028fd);
    pub const braille_dots_2345678: Keysym = @enumFromInt(0x10028fe);
    pub const braille_dots_12345678: Keysym = @enumFromInt(0x10028ff);

    pub const Sinh_ng: Keysym = @enumFromInt(0x1000d82);
    pub const Sinh_h2: Keysym = @enumFromInt(0x1000d83);
    pub const Sinh_a: Keysym = @enumFromInt(0x1000d85);
    pub const Sinh_aa: Keysym = @enumFromInt(0x1000d86);
    pub const Sinh_ae: Keysym = @enumFromInt(0x1000d87);
    pub const Sinh_aee: Keysym = @enumFromInt(0x1000d88);
    pub const Sinh_i: Keysym = @enumFromInt(0x1000d89);
    pub const Sinh_ii: Keysym = @enumFromInt(0x1000d8a);
    pub const Sinh_u: Keysym = @enumFromInt(0x1000d8b);
    pub const Sinh_uu: Keysym = @enumFromInt(0x1000d8c);
    pub const Sinh_ri: Keysym = @enumFromInt(0x1000d8d);
    pub const Sinh_rii: Keysym = @enumFromInt(0x1000d8e);
    pub const Sinh_lu: Keysym = @enumFromInt(0x1000d8f);
    pub const Sinh_luu: Keysym = @enumFromInt(0x1000d90);
    pub const Sinh_e: Keysym = @enumFromInt(0x1000d91);
    pub const Sinh_ee: Keysym = @enumFromInt(0x1000d92);
    pub const Sinh_ai: Keysym = @enumFromInt(0x1000d93);
    pub const Sinh_o: Keysym = @enumFromInt(0x1000d94);
    pub const Sinh_oo: Keysym = @enumFromInt(0x1000d95);
    pub const Sinh_au: Keysym = @enumFromInt(0x1000d96);
    pub const Sinh_ka: Keysym = @enumFromInt(0x1000d9a);
    pub const Sinh_kha: Keysym = @enumFromInt(0x1000d9b);
    pub const Sinh_ga: Keysym = @enumFromInt(0x1000d9c);
    pub const Sinh_gha: Keysym = @enumFromInt(0x1000d9d);
    pub const Sinh_ng2: Keysym = @enumFromInt(0x1000d9e);
    pub const Sinh_nga: Keysym = @enumFromInt(0x1000d9f);
    pub const Sinh_ca: Keysym = @enumFromInt(0x1000da0);
    pub const Sinh_cha: Keysym = @enumFromInt(0x1000da1);
    pub const Sinh_ja: Keysym = @enumFromInt(0x1000da2);
    pub const Sinh_jha: Keysym = @enumFromInt(0x1000da3);
    pub const Sinh_nya: Keysym = @enumFromInt(0x1000da4);
    pub const Sinh_jnya: Keysym = @enumFromInt(0x1000da5);
    pub const Sinh_nja: Keysym = @enumFromInt(0x1000da6);
    pub const Sinh_tta: Keysym = @enumFromInt(0x1000da7);
    pub const Sinh_ttha: Keysym = @enumFromInt(0x1000da8);
    pub const Sinh_dda: Keysym = @enumFromInt(0x1000da9);
    pub const Sinh_ddha: Keysym = @enumFromInt(0x1000daa);
    pub const Sinh_nna: Keysym = @enumFromInt(0x1000dab);
    pub const Sinh_ndda: Keysym = @enumFromInt(0x1000dac);
    pub const Sinh_tha: Keysym = @enumFromInt(0x1000dad);
    pub const Sinh_thha: Keysym = @enumFromInt(0x1000dae);
    pub const Sinh_dha: Keysym = @enumFromInt(0x1000daf);
    pub const Sinh_dhha: Keysym = @enumFromInt(0x1000db0);
    pub const Sinh_na: Keysym = @enumFromInt(0x1000db1);
    pub const Sinh_ndha: Keysym = @enumFromInt(0x1000db3);
    pub const Sinh_pa: Keysym = @enumFromInt(0x1000db4);
    pub const Sinh_pha: Keysym = @enumFromInt(0x1000db5);
    pub const Sinh_ba: Keysym = @enumFromInt(0x1000db6);
    pub const Sinh_bha: Keysym = @enumFromInt(0x1000db7);
    pub const Sinh_ma: Keysym = @enumFromInt(0x1000db8);
    pub const Sinh_mba: Keysym = @enumFromInt(0x1000db9);
    pub const Sinh_ya: Keysym = @enumFromInt(0x1000dba);
    pub const Sinh_ra: Keysym = @enumFromInt(0x1000dbb);
    pub const Sinh_la: Keysym = @enumFromInt(0x1000dbd);
    pub const Sinh_va: Keysym = @enumFromInt(0x1000dc0);
    pub const Sinh_sha: Keysym = @enumFromInt(0x1000dc1);
    pub const Sinh_ssha: Keysym = @enumFromInt(0x1000dc2);
    pub const Sinh_sa: Keysym = @enumFromInt(0x1000dc3);
    pub const Sinh_ha: Keysym = @enumFromInt(0x1000dc4);
    pub const Sinh_lla: Keysym = @enumFromInt(0x1000dc5);
    pub const Sinh_fa: Keysym = @enumFromInt(0x1000dc6);
    pub const Sinh_al: Keysym = @enumFromInt(0x1000dca);
    pub const Sinh_aa2: Keysym = @enumFromInt(0x1000dcf);
    pub const Sinh_ae2: Keysym = @enumFromInt(0x1000dd0);
    pub const Sinh_aee2: Keysym = @enumFromInt(0x1000dd1);
    pub const Sinh_i2: Keysym = @enumFromInt(0x1000dd2);
    pub const Sinh_ii2: Keysym = @enumFromInt(0x1000dd3);
    pub const Sinh_u2: Keysym = @enumFromInt(0x1000dd4);
    pub const Sinh_uu2: Keysym = @enumFromInt(0x1000dd6);
    pub const Sinh_ru2: Keysym = @enumFromInt(0x1000dd8);
    pub const Sinh_e2: Keysym = @enumFromInt(0x1000dd9);
    pub const Sinh_ee2: Keysym = @enumFromInt(0x1000dda);
    pub const Sinh_ai2: Keysym = @enumFromInt(0x1000ddb);
    pub const Sinh_o2: Keysym = @enumFromInt(0x1000ddc);
    pub const Sinh_oo2: Keysym = @enumFromInt(0x1000ddd);
    pub const Sinh_au2: Keysym = @enumFromInt(0x1000dde);
    pub const Sinh_lu2: Keysym = @enumFromInt(0x1000ddf);
    pub const Sinh_ruu2: Keysym = @enumFromInt(0x1000df2);
    pub const Sinh_luu2: Keysym = @enumFromInt(0x1000df3);
    pub const Sinh_kunddaliya: Keysym = @enumFromInt(0x1000df4);

    pub const XF86ModeLock: Keysym = @enumFromInt(0x1008FF01);
    pub const XF86MonBrightnessUp: Keysym = @enumFromInt(0x1008FF02);
    pub const XF86MonBrightnessDown: Keysym = @enumFromInt(0x1008FF03);
    pub const XF86KbdLightOnOff: Keysym = @enumFromInt(0x1008FF04);
    pub const XF86KbdBrightnessUp: Keysym = @enumFromInt(0x1008FF05);
    pub const XF86KbdBrightnessDown: Keysym = @enumFromInt(0x1008FF06);
    pub const XF86Standby: Keysym = @enumFromInt(0x1008FF10);
    pub const XF86AudioLowerVolume: Keysym = @enumFromInt(0x1008FF11);
    pub const XF86AudioMute: Keysym = @enumFromInt(0x1008FF12);
    pub const XF86AudioRaiseVolume: Keysym = @enumFromInt(0x1008FF13);
    pub const XF86AudioPlay: Keysym = @enumFromInt(0x1008FF14);
    pub const XF86AudioStop: Keysym = @enumFromInt(0x1008FF15);
    pub const XF86AudioPrev: Keysym = @enumFromInt(0x1008FF16);
    pub const XF86AudioNext: Keysym = @enumFromInt(0x1008FF17);
    pub const XF86HomePage: Keysym = @enumFromInt(0x1008FF18);
    pub const XF86Mail: Keysym = @enumFromInt(0x1008FF19);
    pub const XF86Start: Keysym = @enumFromInt(0x1008FF1A);
    pub const XF86Search: Keysym = @enumFromInt(0x1008FF1B);
    pub const XF86AudioRecord: Keysym = @enumFromInt(0x1008FF1C);
    pub const XF86Calculator: Keysym = @enumFromInt(0x1008FF1D);
    pub const XF86Memo: Keysym = @enumFromInt(0x1008FF1E);
    pub const XF86ToDoList: Keysym = @enumFromInt(0x1008FF1F);
    pub const XF86Calendar: Keysym = @enumFromInt(0x1008FF20);
    pub const XF86PowerDown: Keysym = @enumFromInt(0x1008FF21);
    pub const XF86ContrastAdjust: Keysym = @enumFromInt(0x1008FF22);
    pub const XF86RockerUp: Keysym = @enumFromInt(0x1008FF23);
    pub const XF86RockerDown: Keysym = @enumFromInt(0x1008FF24);
    pub const XF86RockerEnter: Keysym = @enumFromInt(0x1008FF25);
    pub const XF86Back: Keysym = @enumFromInt(0x1008FF26);
    pub const XF86Forward: Keysym = @enumFromInt(0x1008FF27);
    pub const XF86Stop: Keysym = @enumFromInt(0x1008FF28);
    pub const XF86Refresh: Keysym = @enumFromInt(0x1008FF29);
    pub const XF86PowerOff: Keysym = @enumFromInt(0x1008FF2A);
    pub const XF86WakeUp: Keysym = @enumFromInt(0x1008FF2B);
    pub const XF86Eject: Keysym = @enumFromInt(0x1008FF2C);
    pub const XF86ScreenSaver: Keysym = @enumFromInt(0x1008FF2D);
    pub const XF86WWW: Keysym = @enumFromInt(0x1008FF2E);
    pub const XF86Sleep: Keysym = @enumFromInt(0x1008FF2F);
    pub const XF86Favorites: Keysym = @enumFromInt(0x1008FF30);
    pub const XF86AudioPause: Keysym = @enumFromInt(0x1008FF31);
    pub const XF86AudioMedia: Keysym = @enumFromInt(0x1008FF32);
    pub const XF86MyComputer: Keysym = @enumFromInt(0x1008FF33);
    pub const XF86VendorHome: Keysym = @enumFromInt(0x1008FF34);
    pub const XF86LightBulb: Keysym = @enumFromInt(0x1008FF35);
    pub const XF86Shop: Keysym = @enumFromInt(0x1008FF36);
    pub const XF86History: Keysym = @enumFromInt(0x1008FF37);
    pub const XF86OpenURL: Keysym = @enumFromInt(0x1008FF38);
    pub const XF86AddFavorite: Keysym = @enumFromInt(0x1008FF39);
    pub const XF86HotLinks: Keysym = @enumFromInt(0x1008FF3A);
    pub const XF86BrightnessAdjust: Keysym = @enumFromInt(0x1008FF3B);
    pub const XF86Finance: Keysym = @enumFromInt(0x1008FF3C);
    pub const XF86Community: Keysym = @enumFromInt(0x1008FF3D);
    pub const XF86AudioRewind: Keysym = @enumFromInt(0x1008FF3E);
    pub const XF86BackForward: Keysym = @enumFromInt(0x1008FF3F);
    pub const XF86Launch0: Keysym = @enumFromInt(0x1008FF40);
    pub const XF86Launch1: Keysym = @enumFromInt(0x1008FF41);
    pub const XF86Launch2: Keysym = @enumFromInt(0x1008FF42);
    pub const XF86Launch3: Keysym = @enumFromInt(0x1008FF43);
    pub const XF86Launch4: Keysym = @enumFromInt(0x1008FF44);
    pub const XF86Launch5: Keysym = @enumFromInt(0x1008FF45);
    pub const XF86Launch6: Keysym = @enumFromInt(0x1008FF46);
    pub const XF86Launch7: Keysym = @enumFromInt(0x1008FF47);
    pub const XF86Launch8: Keysym = @enumFromInt(0x1008FF48);
    pub const XF86Launch9: Keysym = @enumFromInt(0x1008FF49);
    pub const XF86LaunchA: Keysym = @enumFromInt(0x1008FF4A);
    pub const XF86LaunchB: Keysym = @enumFromInt(0x1008FF4B);
    pub const XF86LaunchC: Keysym = @enumFromInt(0x1008FF4C);
    pub const XF86LaunchD: Keysym = @enumFromInt(0x1008FF4D);
    pub const XF86LaunchE: Keysym = @enumFromInt(0x1008FF4E);
    pub const XF86LaunchF: Keysym = @enumFromInt(0x1008FF4F);
    pub const XF86ApplicationLeft: Keysym = @enumFromInt(0x1008FF50);
    pub const XF86ApplicationRight: Keysym = @enumFromInt(0x1008FF51);
    pub const XF86Book: Keysym = @enumFromInt(0x1008FF52);
    pub const XF86CD: Keysym = @enumFromInt(0x1008FF53);
    pub const XF86Calculater: Keysym = @enumFromInt(0x1008FF54);
    pub const XF86Clear: Keysym = @enumFromInt(0x1008FF55);
    pub const XF86Close: Keysym = @enumFromInt(0x1008FF56);
    pub const XF86Copy: Keysym = @enumFromInt(0x1008FF57);
    pub const XF86Cut: Keysym = @enumFromInt(0x1008FF58);
    pub const XF86Display: Keysym = @enumFromInt(0x1008FF59);
    pub const XF86DOS: Keysym = @enumFromInt(0x1008FF5A);
    pub const XF86Documents: Keysym = @enumFromInt(0x1008FF5B);
    pub const XF86Excel: Keysym = @enumFromInt(0x1008FF5C);
    pub const XF86Explorer: Keysym = @enumFromInt(0x1008FF5D);
    pub const XF86Game: Keysym = @enumFromInt(0x1008FF5E);
    pub const XF86Go: Keysym = @enumFromInt(0x1008FF5F);
    pub const XF86iTouch: Keysym = @enumFromInt(0x1008FF60);
    pub const XF86LogOff: Keysym = @enumFromInt(0x1008FF61);
    pub const XF86Market: Keysym = @enumFromInt(0x1008FF62);
    pub const XF86Meeting: Keysym = @enumFromInt(0x1008FF63);
    pub const XF86MenuKB: Keysym = @enumFromInt(0x1008FF65);
    pub const XF86MenuPB: Keysym = @enumFromInt(0x1008FF66);
    pub const XF86MySites: Keysym = @enumFromInt(0x1008FF67);
    pub const XF86New: Keysym = @enumFromInt(0x1008FF68);
    pub const XF86News: Keysym = @enumFromInt(0x1008FF69);
    pub const XF86OfficeHome: Keysym = @enumFromInt(0x1008FF6A);
    pub const XF86Open: Keysym = @enumFromInt(0x1008FF6B);
    pub const XF86Option: Keysym = @enumFromInt(0x1008FF6C);
    pub const XF86Paste: Keysym = @enumFromInt(0x1008FF6D);
    pub const XF86Phone: Keysym = @enumFromInt(0x1008FF6E);
    pub const XF86Q: Keysym = @enumFromInt(0x1008FF70);
    pub const XF86Reply: Keysym = @enumFromInt(0x1008FF72);
    pub const XF86Reload: Keysym = @enumFromInt(0x1008FF73);
    pub const XF86RotateWindows: Keysym = @enumFromInt(0x1008FF74);
    pub const XF86RotationPB: Keysym = @enumFromInt(0x1008FF75);
    pub const XF86RotationKB: Keysym = @enumFromInt(0x1008FF76);
    pub const XF86Save: Keysym = @enumFromInt(0x1008FF77);
    pub const XF86ScrollUp: Keysym = @enumFromInt(0x1008FF78);
    pub const XF86ScrollDown: Keysym = @enumFromInt(0x1008FF79);
    pub const XF86ScrollClick: Keysym = @enumFromInt(0x1008FF7A);
    pub const XF86Send: Keysym = @enumFromInt(0x1008FF7B);
    pub const XF86Spell: Keysym = @enumFromInt(0x1008FF7C);
    pub const XF86SplitScreen: Keysym = @enumFromInt(0x1008FF7D);
    pub const XF86Support: Keysym = @enumFromInt(0x1008FF7E);
    pub const XF86TaskPane: Keysym = @enumFromInt(0x1008FF7F);
    pub const XF86Terminal: Keysym = @enumFromInt(0x1008FF80);
    pub const XF86Tools: Keysym = @enumFromInt(0x1008FF81);
    pub const XF86Travel: Keysym = @enumFromInt(0x1008FF82);
    pub const XF86UserPB: Keysym = @enumFromInt(0x1008FF84);
    pub const XF86User1KB: Keysym = @enumFromInt(0x1008FF85);
    pub const XF86User2KB: Keysym = @enumFromInt(0x1008FF86);
    pub const XF86Video: Keysym = @enumFromInt(0x1008FF87);
    pub const XF86WheelButton: Keysym = @enumFromInt(0x1008FF88);
    pub const XF86Word: Keysym = @enumFromInt(0x1008FF89);
    pub const XF86Xfer: Keysym = @enumFromInt(0x1008FF8A);
    pub const XF86ZoomIn: Keysym = @enumFromInt(0x1008FF8B);
    pub const XF86ZoomOut: Keysym = @enumFromInt(0x1008FF8C);
    pub const XF86Away: Keysym = @enumFromInt(0x1008FF8D);
    pub const XF86Messenger: Keysym = @enumFromInt(0x1008FF8E);
    pub const XF86WebCam: Keysym = @enumFromInt(0x1008FF8F);
    pub const XF86MailForward: Keysym = @enumFromInt(0x1008FF90);
    pub const XF86Pictures: Keysym = @enumFromInt(0x1008FF91);
    pub const XF86Music: Keysym = @enumFromInt(0x1008FF92);
    pub const XF86Battery: Keysym = @enumFromInt(0x1008FF93);
    pub const XF86Bluetooth: Keysym = @enumFromInt(0x1008FF94);
    pub const XF86WLAN: Keysym = @enumFromInt(0x1008FF95);
    pub const XF86UWB: Keysym = @enumFromInt(0x1008FF96);
    pub const XF86AudioForward: Keysym = @enumFromInt(0x1008FF97);
    pub const XF86AudioRepeat: Keysym = @enumFromInt(0x1008FF98);
    pub const XF86AudioRandomPlay: Keysym = @enumFromInt(0x1008FF99);
    pub const XF86Subtitle: Keysym = @enumFromInt(0x1008FF9A);
    pub const XF86AudioCycleTrack: Keysym = @enumFromInt(0x1008FF9B);
    pub const XF86CycleAngle: Keysym = @enumFromInt(0x1008FF9C);
    pub const XF86FrameBack: Keysym = @enumFromInt(0x1008FF9D);
    pub const XF86FrameForward: Keysym = @enumFromInt(0x1008FF9E);
    pub const XF86Time: Keysym = @enumFromInt(0x1008FF9F);
    pub const XF86Select: Keysym = @enumFromInt(0x1008FFA0);
    pub const XF86View: Keysym = @enumFromInt(0x1008FFA1);
    pub const XF86TopMenu: Keysym = @enumFromInt(0x1008FFA2);
    pub const XF86Red: Keysym = @enumFromInt(0x1008FFA3);
    pub const XF86Green: Keysym = @enumFromInt(0x1008FFA4);
    pub const XF86Yellow: Keysym = @enumFromInt(0x1008FFA5);
    pub const XF86Blue: Keysym = @enumFromInt(0x1008FFA6);
    pub const XF86Suspend: Keysym = @enumFromInt(0x1008FFA7);
    pub const XF86Hibernate: Keysym = @enumFromInt(0x1008FFA8);
    pub const XF86TouchpadToggle: Keysym = @enumFromInt(0x1008FFA9);
    pub const XF86TouchpadOn: Keysym = @enumFromInt(0x1008FFB0);
    pub const XF86TouchpadOff: Keysym = @enumFromInt(0x1008FFB1);
    pub const XF86AudioMicMute: Keysym = @enumFromInt(0x1008FFB2);
    pub const XF86Switch_VT_1: Keysym = @enumFromInt(0x1008FE01);
    pub const XF86Switch_VT_2: Keysym = @enumFromInt(0x1008FE02);
    pub const XF86Switch_VT_3: Keysym = @enumFromInt(0x1008FE03);
    pub const XF86Switch_VT_4: Keysym = @enumFromInt(0x1008FE04);
    pub const XF86Switch_VT_5: Keysym = @enumFromInt(0x1008FE05);
    pub const XF86Switch_VT_6: Keysym = @enumFromInt(0x1008FE06);
    pub const XF86Switch_VT_7: Keysym = @enumFromInt(0x1008FE07);
    pub const XF86Switch_VT_8: Keysym = @enumFromInt(0x1008FE08);
    pub const XF86Switch_VT_9: Keysym = @enumFromInt(0x1008FE09);
    pub const XF86Switch_VT_10: Keysym = @enumFromInt(0x1008FE0A);
    pub const XF86Switch_VT_11: Keysym = @enumFromInt(0x1008FE0B);
    pub const XF86Switch_VT_12: Keysym = @enumFromInt(0x1008FE0C);
    pub const XF86Ungrab: Keysym = @enumFromInt(0x1008FE20);
    pub const XF86ClearGrab: Keysym = @enumFromInt(0x1008FE21);
    pub const XF86Next_VMode: Keysym = @enumFromInt(0x1008FE22);
    pub const XF86Prev_VMode: Keysym = @enumFromInt(0x1008FE23);
    pub const XF86LogWindowTree: Keysym = @enumFromInt(0x1008FE24);
    pub const XF86LogGrabInfo: Keysym = @enumFromInt(0x1008FE25);
};
